; ModuleID = 'src/652.src'
source_filename = "src/652.src"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: convergent nofree nounwind uwtable
define dso_local spir_kernel void @A(float* nocapture readonly %a, float* readonly %b, float* %c, float* readonly %d, float %e) local_unnamed_addr #0 !kernel_arg_addr_space !3 !kernel_arg_access_qual !4 !kernel_arg_type !5 !kernel_arg_base_type !5 !kernel_arg_type_qual !6 {
entry:
  %call = tail call i64 @_Z13get_global_idj(i32 0) #2
  %arrayidx = getelementptr inbounds float, float* %a, i64 %call
  %0 = load float, float* %arrayidx, align 4, !tbaa !7
  %mul = fmul float %0, %e
  %mul2 = fmul float %mul, 0x4193D2C640000000
  %div = fdiv float 1.000000e+00, %mul2, !fpmath !11
  %mul3 = fmul float %div, 1.013250e+06
  %add = add i64 %call, 16
  %arrayidx5 = getelementptr inbounds float, float* %d, i64 %add
  %1 = load float, float* %arrayidx5, align 4, !tbaa !7
  %add7 = add i64 %call, 208
  %arrayidx8 = getelementptr inbounds float, float* %d, i64 %add7
  %2 = load float, float* %arrayidx8, align 4, !tbaa !7
  %mul9 = fmul float %1, %2
  %add11 = add i64 %call, 32
  %arrayidx12 = getelementptr inbounds float, float* %d, i64 %add11
  %3 = load float, float* %arrayidx12, align 4, !tbaa !7
  %add14 = add i64 %call, 200
  %arrayidx15 = getelementptr inbounds float, float* %d, i64 %add14
  %4 = load float, float* %arrayidx15, align 4, !tbaa !7
  %mul16 = fmul float %3, %4
  %div17 = fdiv float 1.000000e+00, %mul16, !fpmath !11
  %mul18 = fmul float %mul9, %div17
  %add20 = add i64 %call, 1200
  %arrayidx21 = getelementptr inbounds float, float* %b, i64 %add20
  %5 = load float, float* %arrayidx21, align 4, !tbaa !7
  %call22 = tail call float @_Z4fminff(float %mul18, float 0x4415AF1D80000000) #2
  %mul23 = fmul float %5, %call22
  %arrayidx26 = getelementptr inbounds float, float* %c, i64 %add20
  store float %mul23, float* %arrayidx26, align 4, !tbaa !7
  %6 = load float, float* %arrayidx12, align 4, !tbaa !7
  %7 = load float, float* %arrayidx8, align 4, !tbaa !7
  %mul33 = fmul float %6, %7
  %add35 = add i64 %call, 40
  %arrayidx36 = getelementptr inbounds float, float* %d, i64 %add35
  %8 = load float, float* %arrayidx36, align 4, !tbaa !7
  %9 = load float, float* %arrayidx15, align 4, !tbaa !7
  %mul40 = fmul float %8, %9
  %div41 = fdiv float 1.000000e+00, %mul40, !fpmath !11
  %mul42 = fmul float %mul33, %div41
  %add44 = add i64 %call, 1208
  %arrayidx45 = getelementptr inbounds float, float* %b, i64 %add44
  %10 = load float, float* %arrayidx45, align 4, !tbaa !7
  %call46 = tail call float @_Z4fminff(float %mul42, float 0x4415AF1D80000000) #2
  %mul47 = fmul float %10, %call46
  %arrayidx50 = getelementptr inbounds float, float* %c, i64 %add44
  store float %mul47, float* %arrayidx50, align 4, !tbaa !7
  %add52 = add i64 %call, 24
  %arrayidx53 = getelementptr inbounds float, float* %d, i64 %add52
  %11 = load float, float* %arrayidx53, align 4, !tbaa !7
  %12 = load float, float* %arrayidx8, align 4, !tbaa !7
  %mul57 = fmul float %11, %12
  %add59 = add i64 %call, 48
  %arrayidx60 = getelementptr inbounds float, float* %d, i64 %add59
  %13 = load float, float* %arrayidx60, align 4, !tbaa !7
  %14 = load float, float* %arrayidx15, align 4, !tbaa !7
  %mul64 = fmul float %13, %14
  %div65 = fdiv float 1.000000e+00, %mul64, !fpmath !11
  %mul66 = fmul float %mul57, %div65
  %add68 = add i64 %call, 1216
  %arrayidx69 = getelementptr inbounds float, float* %b, i64 %add68
  %15 = load float, float* %arrayidx69, align 4, !tbaa !7
  %call70 = tail call float @_Z4fminff(float %mul66, float 0x4415AF1D80000000) #2
  %mul71 = fmul float %15, %call70
  %arrayidx74 = getelementptr inbounds float, float* %c, i64 %add68
  store float %mul71, float* %arrayidx74, align 4, !tbaa !7
  %16 = load float, float* %arrayidx53, align 4, !tbaa !7
  %17 = load float, float* %arrayidx8, align 4, !tbaa !7
  %mul81 = fmul float %16, %17
  %18 = load float, float* %arrayidx12, align 4, !tbaa !7
  %add86 = add i64 %call, 104
  %arrayidx87 = getelementptr inbounds float, float* %d, i64 %add86
  %19 = load float, float* %arrayidx87, align 4, !tbaa !7
  %mul88 = fmul float %18, %19
  %add90 = add i64 %call, 128
  %arrayidx91 = getelementptr inbounds float, float* %d, i64 %add90
  %20 = load float, float* %arrayidx91, align 4, !tbaa !7
  %mul92 = fmul float %mul88, %20
  %mul93 = fmul float %mul3, %mul92
  %div94 = fdiv float 1.000000e+00, %mul93, !fpmath !11
  %mul95 = fmul float %mul81, %div94
  %add97 = add i64 %call, 1224
  %arrayidx98 = getelementptr inbounds float, float* %b, i64 %add97
  %21 = load float, float* %arrayidx98, align 4, !tbaa !7
  %call99 = tail call float @_Z4fminff(float %mul95, float 0x4415AF1D80000000) #2
  %mul100 = fmul float %21, %call99
  %arrayidx103 = getelementptr inbounds float, float* %c, i64 %add97
  store float %mul100, float* %arrayidx103, align 4, !tbaa !7
  %add105 = add i64 %call, 168
  %arrayidx106 = getelementptr inbounds float, float* %d, i64 %add105
  %22 = load float, float* %arrayidx106, align 4, !tbaa !7
  %arrayidx109 = getelementptr inbounds float, float* %d, i64 %call
  %23 = load float, float* %arrayidx109, align 4, !tbaa !7
  %add111 = add i64 %call, 152
  %arrayidx112 = getelementptr inbounds float, float* %d, i64 %add111
  %24 = load float, float* %arrayidx112, align 4, !tbaa !7
  %mul113 = fmul float %23, %24
  %mul114 = fmul float %mul3, %mul113
  %div115 = fdiv float 1.000000e+00, %mul114, !fpmath !11
  %mul116 = fmul float %22, %div115
  %add118 = add i64 %call, 1232
  %arrayidx119 = getelementptr inbounds float, float* %b, i64 %add118
  %25 = load float, float* %arrayidx119, align 4, !tbaa !7
  %call120 = tail call float @_Z4fminff(float %mul116, float 0x4415AF1D80000000) #2
  %mul121 = fmul float %25, %call120
  %arrayidx124 = getelementptr inbounds float, float* %c, i64 %add118
  store float %mul121, float* %arrayidx124, align 4, !tbaa !7
  %add126 = add i64 %call, 8
  %arrayidx127 = getelementptr inbounds float, float* %d, i64 %add126
  %26 = load float, float* %arrayidx127, align 4, !tbaa !7
  %27 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul131 = fmul float %26, %27
  %mul132 = fmul float %mul3, %mul131
  %add134 = add i64 %call, 176
  %arrayidx135 = getelementptr inbounds float, float* %d, i64 %add134
  %28 = load float, float* %arrayidx135, align 4, !tbaa !7
  %div136 = fdiv float 1.000000e+00, %28, !fpmath !11
  %mul137 = fmul float %mul132, %div136
  %add139 = add i64 %call, 1240
  %arrayidx140 = getelementptr inbounds float, float* %b, i64 %add139
  %29 = load float, float* %arrayidx140, align 4, !tbaa !7
  %call141 = tail call float @_Z4fminff(float %mul137, float 0x4415AF1D80000000) #2
  %mul142 = fmul float %29, %call141
  %arrayidx145 = getelementptr inbounds float, float* %c, i64 %add139
  store float %mul142, float* %arrayidx145, align 4, !tbaa !7
  %30 = load float, float* %arrayidx127, align 4, !tbaa !7
  %31 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul152 = fmul float %30, %31
  %32 = load float, float* %arrayidx109, align 4, !tbaa !7
  %add157 = add i64 %call, 160
  %arrayidx158 = getelementptr inbounds float, float* %d, i64 %add157
  %33 = load float, float* %arrayidx158, align 4, !tbaa !7
  %mul159 = fmul float %32, %33
  %div160 = fdiv float 1.000000e+00, %mul159, !fpmath !11
  %mul161 = fmul float %mul152, %div160
  %add163 = add i64 %call, 1248
  %arrayidx164 = getelementptr inbounds float, float* %b, i64 %add163
  %34 = load float, float* %arrayidx164, align 4, !tbaa !7
  %call165 = tail call float @_Z4fminff(float %mul161, float 0x4415AF1D80000000) #2
  %mul166 = fmul float %34, %call165
  %arrayidx169 = getelementptr inbounds float, float* %c, i64 %add163
  store float %mul166, float* %arrayidx169, align 4, !tbaa !7
  %35 = load float, float* %arrayidx5, align 4, !tbaa !7
  %36 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul176 = fmul float %35, %36
  %37 = load float, float* %arrayidx12, align 4, !tbaa !7
  %38 = load float, float* %arrayidx158, align 4, !tbaa !7
  %mul183 = fmul float %37, %38
  %div184 = fdiv float 1.000000e+00, %mul183, !fpmath !11
  %mul185 = fmul float %mul176, %div184
  %add187 = add i64 %call, 1256
  %arrayidx188 = getelementptr inbounds float, float* %b, i64 %add187
  %39 = load float, float* %arrayidx188, align 4, !tbaa !7
  %call189 = tail call float @_Z4fminff(float %mul185, float 0x4415AF1D80000000) #2
  %mul190 = fmul float %39, %call189
  %arrayidx193 = getelementptr inbounds float, float* %c, i64 %add187
  store float %mul190, float* %arrayidx193, align 4, !tbaa !7
  %40 = load float, float* %arrayidx5, align 4, !tbaa !7
  %41 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul200 = fmul float %40, %41
  %add202 = add i64 %call, 88
  %arrayidx203 = getelementptr inbounds float, float* %d, i64 %add202
  %42 = load float, float* %arrayidx203, align 4, !tbaa !7
  %add205 = add i64 %call, 120
  %arrayidx206 = getelementptr inbounds float, float* %d, i64 %add205
  %43 = load float, float* %arrayidx206, align 4, !tbaa !7
  %mul207 = fmul float %42, %43
  %div208 = fdiv float 1.000000e+00, %mul207, !fpmath !11
  %mul209 = fmul float %mul200, %div208
  %add211 = add i64 %call, 1264
  %arrayidx212 = getelementptr inbounds float, float* %b, i64 %add211
  %44 = load float, float* %arrayidx212, align 4, !tbaa !7
  %call213 = tail call float @_Z4fminff(float %mul209, float 0x4415AF1D80000000) #2
  %mul214 = fmul float %44, %call213
  %arrayidx217 = getelementptr inbounds float, float* %c, i64 %add211
  store float %mul214, float* %arrayidx217, align 4, !tbaa !7
  %45 = load float, float* %arrayidx5, align 4, !tbaa !7
  %46 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul224 = fmul float %45, %46
  %add226 = add i64 %call, 72
  %arrayidx227 = getelementptr inbounds float, float* %d, i64 %add226
  %47 = load float, float* %arrayidx227, align 4, !tbaa !7
  %48 = load float, float* %arrayidx91, align 4, !tbaa !7
  %mul231 = fmul float %47, %48
  %div232 = fdiv float 1.000000e+00, %mul231, !fpmath !11
  %mul233 = fmul float %mul224, %div232
  %add235 = add i64 %call, 1272
  %arrayidx236 = getelementptr inbounds float, float* %b, i64 %add235
  %49 = load float, float* %arrayidx236, align 4, !tbaa !7
  %call237 = tail call float @_Z4fminff(float %mul233, float 0x4415AF1D80000000) #2
  %mul238 = fmul float %49, %call237
  %arrayidx241 = getelementptr inbounds float, float* %c, i64 %add235
  store float %mul238, float* %arrayidx241, align 4, !tbaa !7
  %50 = load float, float* %arrayidx12, align 4, !tbaa !7
  %51 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul248 = fmul float %50, %51
  %52 = load float, float* %arrayidx36, align 4, !tbaa !7
  %53 = load float, float* %arrayidx158, align 4, !tbaa !7
  %mul255 = fmul float %52, %53
  %div256 = fdiv float 1.000000e+00, %mul255, !fpmath !11
  %mul257 = fmul float %mul248, %div256
  %add259 = add i64 %call, 1280
  %arrayidx260 = getelementptr inbounds float, float* %b, i64 %add259
  %54 = load float, float* %arrayidx260, align 4, !tbaa !7
  %call261 = tail call float @_Z4fminff(float %mul257, float 0x4415AF1D80000000) #2
  %mul262 = fmul float %54, %call261
  %arrayidx265 = getelementptr inbounds float, float* %c, i64 %add259
  store float %mul262, float* %arrayidx265, align 4, !tbaa !7
  %55 = load float, float* %arrayidx53, align 4, !tbaa !7
  %56 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul272 = fmul float %55, %56
  %57 = load float, float* %arrayidx60, align 4, !tbaa !7
  %58 = load float, float* %arrayidx158, align 4, !tbaa !7
  %mul279 = fmul float %57, %58
  %div280 = fdiv float 1.000000e+00, %mul279, !fpmath !11
  %mul281 = fmul float %mul272, %div280
  %add283 = add i64 %call, 1288
  %arrayidx284 = getelementptr inbounds float, float* %b, i64 %add283
  %59 = load float, float* %arrayidx284, align 4, !tbaa !7
  %call285 = tail call float @_Z4fminff(float %mul281, float 0x4415AF1D80000000) #2
  %mul286 = fmul float %59, %call285
  %arrayidx289 = getelementptr inbounds float, float* %c, i64 %add283
  store float %mul286, float* %arrayidx289, align 4, !tbaa !7
  %60 = load float, float* %arrayidx60, align 4, !tbaa !7
  %61 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul296 = fmul float %60, %61
  %62 = load float, float* %arrayidx12, align 4, !tbaa !7
  %add301 = add i64 %call, 216
  %arrayidx302 = getelementptr inbounds float, float* %d, i64 %add301
  %63 = load float, float* %arrayidx302, align 4, !tbaa !7
  %mul303 = fmul float %62, %63
  %div304 = fdiv float 1.000000e+00, %mul303, !fpmath !11
  %mul305 = fmul float %mul296, %div304
  %add307 = add i64 %call, 1296
  %arrayidx308 = getelementptr inbounds float, float* %b, i64 %add307
  %64 = load float, float* %arrayidx308, align 4, !tbaa !7
  %call309 = tail call float @_Z4fminff(float %mul305, float 0x4415AF1D80000000) #2
  %mul310 = fmul float %64, %call309
  %arrayidx313 = getelementptr inbounds float, float* %c, i64 %add307
  store float %mul310, float* %arrayidx313, align 4, !tbaa !7
  %65 = load float, float* %arrayidx206, align 4, !tbaa !7
  %66 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul320 = fmul float %65, %66
  %67 = load float, float* %arrayidx87, align 4, !tbaa !7
  %68 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul327 = fmul float %67, %68
  %div328 = fdiv float 1.000000e+00, %mul327, !fpmath !11
  %mul329 = fmul float %mul320, %div328
  %add331 = add i64 %call, 1304
  %arrayidx332 = getelementptr inbounds float, float* %b, i64 %add331
  %69 = load float, float* %arrayidx332, align 4, !tbaa !7
  %call333 = tail call float @_Z4fminff(float %mul329, float 0x4415AF1D80000000) #2
  %mul334 = fmul float %69, %call333
  %arrayidx337 = getelementptr inbounds float, float* %c, i64 %add331
  store float %mul334, float* %arrayidx337, align 4, !tbaa !7
  %70 = load float, float* %arrayidx227, align 4, !tbaa !7
  %71 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul344 = fmul float %70, %71
  %72 = load float, float* %arrayidx127, align 4, !tbaa !7
  %add349 = add i64 %call, 224
  %arrayidx350 = getelementptr inbounds float, float* %d, i64 %add349
  %73 = load float, float* %arrayidx350, align 4, !tbaa !7
  %mul351 = fmul float %72, %73
  %div352 = fdiv float 1.000000e+00, %mul351, !fpmath !11
  %mul353 = fmul float %mul344, %div352
  %add355 = add i64 %call, 1312
  %arrayidx356 = getelementptr inbounds float, float* %b, i64 %add355
  %74 = load float, float* %arrayidx356, align 4, !tbaa !7
  %call357 = tail call float @_Z4fminff(float %mul353, float 0x4415AF1D80000000) #2
  %mul358 = fmul float %74, %call357
  %arrayidx361 = getelementptr inbounds float, float* %c, i64 %add355
  store float %mul358, float* %arrayidx361, align 4, !tbaa !7
  %add363 = add i64 %call, 80
  %arrayidx364 = getelementptr inbounds float, float* %d, i64 %add363
  %75 = load float, float* %arrayidx364, align 4, !tbaa !7
  %76 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul368 = fmul float %75, %76
  %add370 = add i64 %call, 96
  %arrayidx371 = getelementptr inbounds float, float* %d, i64 %add370
  %77 = load float, float* %arrayidx371, align 4, !tbaa !7
  %78 = load float, float* %arrayidx112, align 4, !tbaa !7
  %mul375 = fmul float %77, %78
  %div376 = fdiv float 1.000000e+00, %mul375, !fpmath !11
  %mul377 = fmul float %mul368, %div376
  %add379 = add i64 %call, 1320
  %arrayidx380 = getelementptr inbounds float, float* %b, i64 %add379
  %79 = load float, float* %arrayidx380, align 4, !tbaa !7
  %call381 = tail call float @_Z4fminff(float %mul377, float 0x4415AF1D80000000) #2
  %mul382 = fmul float %79, %call381
  %arrayidx385 = getelementptr inbounds float, float* %c, i64 %add379
  store float %mul382, float* %arrayidx385, align 4, !tbaa !7
  %80 = load float, float* %arrayidx364, align 4, !tbaa !7
  %81 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul392 = fmul float %80, %81
  %82 = load float, float* %arrayidx127, align 4, !tbaa !7
  %83 = load float, float* %arrayidx350, align 4, !tbaa !7
  %mul399 = fmul float %82, %83
  %div400 = fdiv float 1.000000e+00, %mul399, !fpmath !11
  %mul401 = fmul float %mul392, %div400
  %add403 = add i64 %call, 1328
  %arrayidx404 = getelementptr inbounds float, float* %b, i64 %add403
  %84 = load float, float* %arrayidx404, align 4, !tbaa !7
  %call405 = tail call float @_Z4fminff(float %mul401, float 0x4415AF1D80000000) #2
  %mul406 = fmul float %84, %call405
  %arrayidx409 = getelementptr inbounds float, float* %c, i64 %add403
  store float %mul406, float* %arrayidx409, align 4, !tbaa !7
  %85 = load float, float* %arrayidx203, align 4, !tbaa !7
  %86 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul416 = fmul float %85, %86
  %87 = load float, float* %arrayidx371, align 4, !tbaa !7
  %88 = load float, float* %arrayidx158, align 4, !tbaa !7
  %mul423 = fmul float %87, %88
  %div424 = fdiv float 1.000000e+00, %mul423, !fpmath !11
  %mul425 = fmul float %mul416, %div424
  %add427 = add i64 %call, 1336
  %arrayidx428 = getelementptr inbounds float, float* %b, i64 %add427
  %89 = load float, float* %arrayidx428, align 4, !tbaa !7
  %call429 = tail call float @_Z4fminff(float %mul425, float 0x4415AF1D80000000) #2
  %mul430 = fmul float %89, %call429
  %arrayidx433 = getelementptr inbounds float, float* %c, i64 %add427
  store float %mul430, float* %arrayidx433, align 4, !tbaa !7
  %90 = load float, float* %arrayidx203, align 4, !tbaa !7
  %91 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul440 = fmul float %90, %91
  %mul441 = fmul float %mul3, %mul440
  %add443 = add i64 %call, 240
  %arrayidx444 = getelementptr inbounds float, float* %d, i64 %add443
  %92 = load float, float* %arrayidx444, align 4, !tbaa !7
  %div445 = fdiv float 1.000000e+00, %92, !fpmath !11
  %mul446 = fmul float %mul441, %div445
  %add448 = add i64 %call, 1344
  %arrayidx449 = getelementptr inbounds float, float* %b, i64 %add448
  %93 = load float, float* %arrayidx449, align 4, !tbaa !7
  %call450 = tail call float @_Z4fminff(float %mul446, float 0x4415AF1D80000000) #2
  %mul451 = fmul float %93, %call450
  %arrayidx454 = getelementptr inbounds float, float* %c, i64 %add448
  store float %mul451, float* %arrayidx454, align 4, !tbaa !7
  %94 = load float, float* %arrayidx127, align 4, !tbaa !7
  %95 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul461 = fmul float %94, %95
  %mul462 = fmul float %mul3, %mul461
  %add464 = add i64 %call, 184
  %arrayidx465 = getelementptr inbounds float, float* %d, i64 %add464
  %96 = load float, float* %arrayidx465, align 4, !tbaa !7
  %div466 = fdiv float 1.000000e+00, %96, !fpmath !11
  %mul467 = fmul float %mul462, %div466
  %add469 = add i64 %call, 1352
  %arrayidx470 = getelementptr inbounds float, float* %b, i64 %add469
  %97 = load float, float* %arrayidx470, align 4, !tbaa !7
  %call471 = tail call float @_Z4fminff(float %mul467, float 0x4415AF1D80000000) #2
  %mul472 = fmul float %97, %call471
  %arrayidx475 = getelementptr inbounds float, float* %c, i64 %add469
  store float %mul472, float* %arrayidx475, align 4, !tbaa !7
  %98 = load float, float* %arrayidx127, align 4, !tbaa !7
  %99 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul482 = fmul float %98, %99
  %100 = load float, float* %arrayidx109, align 4, !tbaa !7
  %101 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul489 = fmul float %100, %101
  %div490 = fdiv float 1.000000e+00, %mul489, !fpmath !11
  %mul491 = fmul float %mul482, %div490
  %add493 = add i64 %call, 1360
  %arrayidx494 = getelementptr inbounds float, float* %b, i64 %add493
  %102 = load float, float* %arrayidx494, align 4, !tbaa !7
  %call495 = tail call float @_Z4fminff(float %mul491, float 0x4415AF1D80000000) #2
  %mul496 = fmul float %102, %call495
  %arrayidx499 = getelementptr inbounds float, float* %c, i64 %add493
  store float %mul496, float* %arrayidx499, align 4, !tbaa !7
  %103 = load float, float* %arrayidx5, align 4, !tbaa !7
  %104 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul506 = fmul float %103, %104
  %105 = load float, float* %arrayidx203, align 4, !tbaa !7
  %106 = load float, float* %arrayidx91, align 4, !tbaa !7
  %mul513 = fmul float %105, %106
  %div514 = fdiv float 1.000000e+00, %mul513, !fpmath !11
  %mul515 = fmul float %mul506, %div514
  %add517 = add i64 %call, 1368
  %arrayidx518 = getelementptr inbounds float, float* %b, i64 %add517
  %107 = load float, float* %arrayidx518, align 4, !tbaa !7
  %call519 = tail call float @_Z4fminff(float %mul515, float 0x4415AF1D80000000) #2
  %mul520 = fmul float %107, %call519
  %arrayidx523 = getelementptr inbounds float, float* %c, i64 %add517
  store float %mul520, float* %arrayidx523, align 4, !tbaa !7
  %108 = load float, float* %arrayidx5, align 4, !tbaa !7
  %109 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul530 = fmul float %108, %109
  %110 = load float, float* %arrayidx127, align 4, !tbaa !7
  %111 = load float, float* %arrayidx302, align 4, !tbaa !7
  %mul537 = fmul float %110, %111
  %div538 = fdiv float 1.000000e+00, %mul537, !fpmath !11
  %mul539 = fmul float %mul530, %div538
  %add541 = add i64 %call, 1376
  %arrayidx542 = getelementptr inbounds float, float* %b, i64 %add541
  %112 = load float, float* %arrayidx542, align 4, !tbaa !7
  %call543 = tail call float @_Z4fminff(float %mul539, float 0x4415AF1D80000000) #2
  %mul544 = fmul float %112, %call543
  %arrayidx547 = getelementptr inbounds float, float* %c, i64 %add541
  store float %mul544, float* %arrayidx547, align 4, !tbaa !7
  %113 = load float, float* %arrayidx53, align 4, !tbaa !7
  %114 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul554 = fmul float %113, %114
  %115 = load float, float* %arrayidx60, align 4, !tbaa !7
  %116 = load float, float* %arrayidx106, align 4, !tbaa !7
  %mul561 = fmul float %115, %116
  %div562 = fdiv float 1.000000e+00, %mul561, !fpmath !11
  %mul563 = fmul float %mul554, %div562
  %add565 = add i64 %call, 1384
  %arrayidx566 = getelementptr inbounds float, float* %b, i64 %add565
  %117 = load float, float* %arrayidx566, align 4, !tbaa !7
  %call567 = tail call float @_Z4fminff(float %mul563, float 0x4415AF1D80000000) #2
  %mul568 = fmul float %117, %call567
  %arrayidx571 = getelementptr inbounds float, float* %c, i64 %add565
  store float %mul568, float* %arrayidx571, align 4, !tbaa !7
  %118 = load float, float* %arrayidx60, align 4, !tbaa !7
  %119 = load float, float* %arrayidx135, align 4, !tbaa !7
  %mul578 = fmul float %118, %119
  %120 = load float, float* %arrayidx53, align 4, !tbaa !7
  %121 = load float, float* %arrayidx465, align 4, !tbaa !7
  %mul585 = fmul float %120, %121
  %div586 = fdiv float 1.000000e+00, %mul585, !fpmath !11
  %mul587 = fmul float %mul578, %div586
  %add589 = add i64 %call, 1392
  %arrayidx590 = getelementptr inbounds float, float* %b, i64 %add589
  %122 = load float, float* %arrayidx590, align 4, !tbaa !7
  %call591 = tail call float @_Z4fminff(float %mul587, float 0x4415AF1D80000000) #2
  %mul592 = fmul float %122, %call591
  %arrayidx595 = getelementptr inbounds float, float* %c, i64 %add589
  store float %mul592, float* %arrayidx595, align 4, !tbaa !7
  ret void
}

; Function Attrs: convergent nounwind readnone
declare dso_local i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z4fminff(float, float) local_unnamed_addr #1

attributes #0 = { convergent nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "uniform-work-group-size"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { convergent nounwind readnone }

!llvm.module.flags = !{!0}
!opencl.ocl.version = !{!1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 2, i32 0}
!2 = !{!"clang version 10.0.0 "}
!3 = !{i32 1, i32 1, i32 1, i32 1, i32 0}
!4 = !{!"none", !"none", !"none", !"none", !"none"}
!5 = !{!"float*", !"float*", !"float*", !"float*", !"float"}
!6 = !{!"const", !"const", !"", !"const", !""}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{float 2.500000e+00}
