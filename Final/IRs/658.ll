; ModuleID = 'src/658.src'
source_filename = "src/658.src"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: convergent nofree nounwind uwtable
define dso_local spir_kernel void @A(float* nocapture readonly %a, float* nocapture readonly %b, float* nocapture %c, float* nocapture %d, float* nocapture readonly %e, float %f) local_unnamed_addr #0 !kernel_arg_addr_space !3 !kernel_arg_access_qual !4 !kernel_arg_type !5 !kernel_arg_base_type !5 !kernel_arg_type_qual !6 {
entry:
  %call = tail call i64 @_Z13get_global_idj(i32 0) #3
  %arrayidx = getelementptr inbounds float, float* %a, i64 %call
  %0 = load float, float* %arrayidx, align 4, !tbaa !7
  %arrayidx4 = getelementptr inbounds float, float* %b, i64 %call
  %1 = load float, float* %arrayidx4, align 4, !tbaa !7
  %add5 = fadd float %1, 0.000000e+00
  %add.1 = add i64 %call, 8
  %arrayidx4.1 = getelementptr inbounds float, float* %b, i64 %add.1
  %2 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %add5.1 = fadd float %add5, %2
  %add.2 = add i64 %call, 16
  %arrayidx4.2 = getelementptr inbounds float, float* %b, i64 %add.2
  %3 = load float, float* %arrayidx4.2, align 4, !tbaa !7
  %add5.2 = fadd float %add5.1, %3
  %add.3 = add i64 %call, 24
  %arrayidx4.3 = getelementptr inbounds float, float* %b, i64 %add.3
  %4 = load float, float* %arrayidx4.3, align 4, !tbaa !7
  %add5.3 = fadd float %add5.2, %4
  %add.4 = add i64 %call, 32
  %arrayidx4.4 = getelementptr inbounds float, float* %b, i64 %add.4
  %5 = load float, float* %arrayidx4.4, align 4, !tbaa !7
  %add5.4 = fadd float %add5.3, %5
  %add.5 = add i64 %call, 40
  %arrayidx4.5 = getelementptr inbounds float, float* %b, i64 %add.5
  %6 = load float, float* %arrayidx4.5, align 4, !tbaa !7
  %add5.5 = fadd float %add5.4, %6
  %add.6 = add i64 %call, 48
  %arrayidx4.6 = getelementptr inbounds float, float* %b, i64 %add.6
  %7 = load float, float* %arrayidx4.6, align 4, !tbaa !7
  %add5.6 = fadd float %add5.5, %7
  %add.7 = add i64 %call, 56
  %arrayidx4.7 = getelementptr inbounds float, float* %b, i64 %add.7
  %8 = load float, float* %arrayidx4.7, align 4, !tbaa !7
  %add5.7 = fadd float %add5.6, %8
  %add.8 = add i64 %call, 64
  %arrayidx4.8 = getelementptr inbounds float, float* %b, i64 %add.8
  %9 = load float, float* %arrayidx4.8, align 4, !tbaa !7
  %add5.8 = fadd float %add5.7, %9
  %add.9 = add i64 %call, 72
  %arrayidx4.9 = getelementptr inbounds float, float* %b, i64 %add.9
  %10 = load float, float* %arrayidx4.9, align 4, !tbaa !7
  %add5.9 = fadd float %add5.8, %10
  %add.10 = add i64 %call, 80
  %arrayidx4.10 = getelementptr inbounds float, float* %b, i64 %add.10
  %11 = load float, float* %arrayidx4.10, align 4, !tbaa !7
  %add5.10 = fadd float %add5.9, %11
  %add.11 = add i64 %call, 88
  %arrayidx4.11 = getelementptr inbounds float, float* %b, i64 %add.11
  %12 = load float, float* %arrayidx4.11, align 4, !tbaa !7
  %add5.11 = fadd float %add5.10, %12
  %add.12 = add i64 %call, 96
  %arrayidx4.12 = getelementptr inbounds float, float* %b, i64 %add.12
  %13 = load float, float* %arrayidx4.12, align 4, !tbaa !7
  %add5.12 = fadd float %add5.11, %13
  %add.13 = add i64 %call, 104
  %arrayidx4.13 = getelementptr inbounds float, float* %b, i64 %add.13
  %14 = load float, float* %arrayidx4.13, align 4, !tbaa !7
  %add5.13 = fadd float %add5.12, %14
  %add.14 = add i64 %call, 112
  %arrayidx4.14 = getelementptr inbounds float, float* %b, i64 %add.14
  %15 = load float, float* %arrayidx4.14, align 4, !tbaa !7
  %add5.14 = fadd float %add5.13, %15
  %add.15 = add i64 %call, 120
  %arrayidx4.15 = getelementptr inbounds float, float* %b, i64 %add.15
  %16 = load float, float* %arrayidx4.15, align 4, !tbaa !7
  %add5.15 = fadd float %add5.14, %16
  %add.16 = add i64 %call, 128
  %arrayidx4.16 = getelementptr inbounds float, float* %b, i64 %add.16
  %17 = load float, float* %arrayidx4.16, align 4, !tbaa !7
  %add5.16 = fadd float %add5.15, %17
  %add.17 = add i64 %call, 136
  %arrayidx4.17 = getelementptr inbounds float, float* %b, i64 %add.17
  %18 = load float, float* %arrayidx4.17, align 4, !tbaa !7
  %add5.17 = fadd float %add5.16, %18
  %add.18 = add i64 %call, 144
  %arrayidx4.18 = getelementptr inbounds float, float* %b, i64 %add.18
  %19 = load float, float* %arrayidx4.18, align 4, !tbaa !7
  %add5.18 = fadd float %add5.17, %19
  %add.19 = add i64 %call, 152
  %arrayidx4.19 = getelementptr inbounds float, float* %b, i64 %add.19
  %20 = load float, float* %arrayidx4.19, align 4, !tbaa !7
  %add5.19 = fadd float %add5.18, %20
  %add.20 = add i64 %call, 160
  %arrayidx4.20 = getelementptr inbounds float, float* %b, i64 %add.20
  %21 = load float, float* %arrayidx4.20, align 4, !tbaa !7
  %add5.20 = fadd float %add5.19, %21
  %add.21 = add i64 %call, 168
  %arrayidx4.21 = getelementptr inbounds float, float* %b, i64 %add.21
  %22 = load float, float* %arrayidx4.21, align 4, !tbaa !7
  %add5.21 = fadd float %add5.20, %22
  %mul = fmul float %0, %f
  %sub9 = fsub float %add5.21, %1
  %sub13 = fsub float %sub9, %6
  %add17 = fadd float %sub13, %10
  %sub21 = fsub float %add17, %12
  %conv22 = fpext float %sub21 to double
  %conv26 = fpext float %16 to double
  %23 = tail call double @llvm.fmuladd.f64(double %conv26, double 2.000000e+00, double %conv22)
  %conv31 = fpext float %14 to double
  %24 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %23)
  %conv36 = fpext float %15 to double
  %25 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %24)
  %conv38 = fptrunc double %25 to float
  %26 = tail call float @llvm.fmuladd.f32(float %1, float 0xBFD147AE20000000, float %add5.21)
  %27 = tail call float @llvm.fmuladd.f32(float %6, float 0x4005333340000000, float %26)
  %add50 = fadd float %27, %10
  %conv51 = fpext float %add50 to double
  %28 = tail call double @llvm.fmuladd.f64(double %conv26, double 2.000000e+00, double %conv51)
  %29 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %28)
  %30 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %29)
  %conv67 = fptrunc double %30 to float
  %add71 = fadd float %add5.21, %1
  %conv72 = fpext float %add71 to double
  %conv76 = fpext float %6 to double
  %31 = tail call double @llvm.fmuladd.f64(double %conv76, double 5.000000e+00, double %conv72)
  %conv81 = fpext float %10 to double
  %add82 = fadd double %31, %conv81
  %conv86 = fpext float %11 to double
  %32 = tail call double @llvm.fmuladd.f64(double %conv86, double 5.000000e-01, double %add82)
  %conv91 = fpext float %12 to double
  %add92 = fadd double %32, %conv91
  %33 = tail call double @llvm.fmuladd.f64(double %conv26, double 2.000000e+00, double %add92)
  %34 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %33)
  %35 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %34)
  %conv108 = fptrunc double %35 to float
  %36 = tail call float @llvm.fmuladd.f32(float %1, float 0x3FF6666660000000, float %add5.21)
  %37 = tail call float @llvm.fmuladd.f32(float %6, float 0x402CCCCCC0000000, float %36)
  %add120 = fadd float %37, %10
  %38 = tail call float @llvm.fmuladd.f32(float %11, float 7.500000e-01, float %add120)
  %39 = tail call float @llvm.fmuladd.f32(float %12, float 0x4004CCCCC0000000, float %38)
  %conv129 = fpext float %39 to double
  %40 = tail call double @llvm.fmuladd.f64(double %conv26, double 2.000000e+00, double %conv129)
  %41 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %40)
  %42 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %41)
  %conv145 = fptrunc double %42 to float
  %43 = load float, float* %arrayidx4.3, align 4, !tbaa !7
  %sub149 = fsub float %add5.21, %43
  %sub153 = fsub float %sub149, %6
  %44 = tail call float @llvm.fmuladd.f32(float %11, float -2.500000e-01, float %sub153)
  %conv158 = fpext float %44 to double
  %45 = tail call double @llvm.fmuladd.f64(double %conv91, double 5.000000e-01, double %conv158)
  %46 = tail call double @llvm.fmuladd.f64(double %conv26, double 5.000000e-01, double %45)
  %conv172 = fpext float %22 to double
  %sub173 = fsub double %46, %conv172
  %47 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %sub173)
  %48 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %47)
  %conv184 = fptrunc double %48 to float
  %conv193 = fpext float %43 to double
  %49 = tail call double @llvm.fmuladd.f64(double %conv193, double 5.000000e+00, double %conv72)
  %50 = tail call double @llvm.fmuladd.f64(double %conv76, double 5.000000e+00, double %49)
  %add204 = fadd double %50, %conv81
  %51 = tail call double @llvm.fmuladd.f64(double %conv86, double 5.000000e-01, double %add204)
  %mul213 = fmul float %12, 2.500000e+00
  %conv214 = fpext float %mul213 to double
  %add215 = fadd double %51, %conv214
  %52 = tail call double @llvm.fmuladd.f64(double %conv26, double 2.000000e+00, double %add215)
  %53 = tail call double @llvm.fmuladd.f64(double %conv31, double 2.000000e+00, double %52)
  %54 = tail call double @llvm.fmuladd.f64(double %conv36, double 2.000000e+00, double %53)
  %conv231 = fptrunc double %54 to float
  %conv262 = fptrunc double %33 to float
  %arrayidx265 = getelementptr inbounds float, float* %c, i64 %add.4
  %55 = load float, float* %arrayidx265, align 4, !tbaa !7
  %mul266 = fmul float %55, %conv38
  %56 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %mul270 = fmul float %mul266, %56
  %mul274 = fmul float %56, %mul270
  store float %mul274, float* %arrayidx265, align 4, !tbaa !7
  %arrayidx280 = getelementptr inbounds float, float* %d, i64 %add.4
  %57 = load float, float* %arrayidx280, align 4, !tbaa !7
  %mul281 = fmul float %57, %conv38
  %58 = load float, float* %arrayidx4, align 4, !tbaa !7
  %mul285 = fmul float %mul281, %58
  store float %mul285, float* %arrayidx280, align 4, !tbaa !7
  %arrayidx291 = getelementptr inbounds float, float* %c, i64 %add.8
  %59 = load float, float* %arrayidx291, align 4, !tbaa !7
  %mul292 = fmul float %59, %conv67
  %60 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %mul296 = fmul float %mul292, %60
  %61 = load float, float* %arrayidx4.4, align 4, !tbaa !7
  %mul300 = fmul float %mul296, %61
  store float %mul300, float* %arrayidx291, align 4, !tbaa !7
  %arrayidx306 = getelementptr inbounds float, float* %d, i64 %add.8
  %62 = load float, float* %arrayidx306, align 4, !tbaa !7
  %mul307 = fmul float %62, %conv67
  %63 = load float, float* %arrayidx4.5, align 4, !tbaa !7
  %mul311 = fmul float %mul307, %63
  store float %mul311, float* %arrayidx306, align 4, !tbaa !7
  %arrayidx317 = getelementptr inbounds float, float* %c, i64 %add.9
  %64 = load float, float* %arrayidx317, align 4, !tbaa !7
  %mul318 = fmul float %64, %conv108
  %65 = load float, float* %arrayidx4.2, align 4, !tbaa !7
  %mul322 = fmul float %mul318, %65
  %66 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %mul326 = fmul float %mul322, %66
  store float %mul326, float* %arrayidx317, align 4, !tbaa !7
  %arrayidx332 = getelementptr inbounds float, float* %d, i64 %add.9
  %67 = load float, float* %arrayidx332, align 4, !tbaa !7
  %mul333 = fmul float %67, %conv108
  %68 = load float, float* %arrayidx4.4, align 4, !tbaa !7
  %mul337 = fmul float %mul333, %68
  store float %mul337, float* %arrayidx332, align 4, !tbaa !7
  %arrayidx343 = getelementptr inbounds float, float* %c, i64 %add.10
  %69 = load float, float* %arrayidx343, align 4, !tbaa !7
  %mul344 = fmul float %69, %conv145
  %70 = load float, float* %arrayidx4.2, align 4, !tbaa !7
  %mul348 = fmul float %mul344, %70
  %mul352 = fmul float %70, %mul348
  store float %mul352, float* %arrayidx343, align 4, !tbaa !7
  %arrayidx358 = getelementptr inbounds float, float* %d, i64 %add.10
  %71 = load float, float* %arrayidx358, align 4, !tbaa !7
  %mul359 = fmul float %71, %conv145
  %72 = load float, float* %arrayidx4.3, align 4, !tbaa !7
  %mul363 = fmul float %mul359, %72
  store float %mul363, float* %arrayidx358, align 4, !tbaa !7
  %arrayidx369 = getelementptr inbounds float, float* %c, i64 %add.11
  %73 = load float, float* %arrayidx369, align 4, !tbaa !7
  %mul370 = fmul float %73, %conv184
  %74 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %mul374 = fmul float %mul370, %74
  %75 = load float, float* %arrayidx4.3, align 4, !tbaa !7
  %mul378 = fmul float %mul374, %75
  store float %mul378, float* %arrayidx369, align 4, !tbaa !7
  %arrayidx384 = getelementptr inbounds float, float* %d, i64 %add.11
  %76 = load float, float* %arrayidx384, align 4, !tbaa !7
  %mul385 = fmul float %76, %conv184
  %77 = load float, float* %arrayidx4.6, align 4, !tbaa !7
  %mul389 = fmul float %mul385, %77
  store float %mul389, float* %arrayidx384, align 4, !tbaa !7
  %add394 = add i64 %call, 224
  %arrayidx395 = getelementptr inbounds float, float* %c, i64 %add394
  %78 = load float, float* %arrayidx395, align 4, !tbaa !7
  %mul396 = fmul float %78, %conv231
  %79 = load float, float* %arrayidx4.10, align 4, !tbaa !7
  %mul400 = fmul float %mul396, %79
  %80 = load float, float* %arrayidx4.2, align 4, !tbaa !7
  %mul404 = fmul float %mul400, %80
  store float %mul404, float* %arrayidx395, align 4, !tbaa !7
  %arrayidx410 = getelementptr inbounds float, float* %d, i64 %add394
  %81 = load float, float* %arrayidx410, align 4, !tbaa !7
  %mul411 = fmul float %81, %conv231
  %82 = load float, float* %arrayidx4.11, align 4, !tbaa !7
  %mul415 = fmul float %mul411, %82
  store float %mul415, float* %arrayidx410, align 4, !tbaa !7
  %add420 = add i64 %call, 360
  %arrayidx421 = getelementptr inbounds float, float* %c, i64 %add420
  %83 = load float, float* %arrayidx421, align 4, !tbaa !7
  %mul422 = fmul float %83, %conv108
  store float %mul422, float* %arrayidx421, align 4, !tbaa !7
  %arrayidx428 = getelementptr inbounds float, float* %d, i64 %add420
  %84 = load float, float* %arrayidx428, align 4, !tbaa !7
  %mul429 = fmul float %84, %conv108
  %85 = load float, float* %arrayidx4.10, align 4, !tbaa !7
  %mul433 = fmul float %mul429, %85
  %86 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %mul437 = fmul float %mul433, %86
  store float %mul437, float* %arrayidx428, align 4, !tbaa !7
  %add442 = add i64 %call, 960
  %arrayidx443 = getelementptr inbounds float, float* %c, i64 %add442
  %87 = load float, float* %arrayidx443, align 4, !tbaa !7
  %mul444 = fmul float %add5.21, %87
  %88 = load float, float* %arrayidx4.13, align 4, !tbaa !7
  %mul448 = fmul float %mul444, %88
  %89 = load float, float* %arrayidx4.8, align 4, !tbaa !7
  %mul452 = fmul float %mul448, %89
  store float %mul452, float* %arrayidx443, align 4, !tbaa !7
  %arrayidx458 = getelementptr inbounds float, float* %d, i64 %add442
  %90 = load float, float* %arrayidx458, align 4, !tbaa !7
  %mul459 = fmul float %add5.21, %90
  %91 = load float, float* %arrayidx4.19, align 4, !tbaa !7
  %mul463 = fmul float %mul459, %91
  store float %mul463, float* %arrayidx458, align 4, !tbaa !7
  %arrayidx469 = getelementptr inbounds float, float* %e, i64 %add.12
  %92 = load float, float* %arrayidx469, align 4, !tbaa !7
  %add471 = add i64 %call, 1000
  %arrayidx472 = getelementptr inbounds float, float* %c, i64 %add471
  %93 = load float, float* %arrayidx472, align 4, !tbaa !7
  %div = fdiv float 1.000000e+00, %93, !fpmath !11
  %mul473 = fmul float %div, %conv108
  %mul474 = fmul float %92, %mul473
  %conv475 = fpext float %mul474 to double
  %add477 = fadd double %conv475, 1.000000e+00
  %div478 = fdiv double 1.000000e+00, %add477
  %mul479 = fmul double %div478, %conv475
  %conv480 = fptrunc double %mul479 to float
  %call481 = tail call float @_Z4fmaxff(float %mul474, float 0x3810000000000000) #3
  %call482 = tail call float @_Z5log10f(float %call481) #3
  %mul483 = fmul float %mul, 0xBF43323D80000000
  %call484 = tail call float @_Z3expf(float %mul483) #3
  %mul487 = fmul float %mul, 0xBF347AE140000000
  %call488 = tail call float @_Z3expf(float %mul487) #3
  %mul489 = fmul float %call488, 0x3FD5916880000000
  %94 = tail call float @llvm.fmuladd.f32(float %call484, float 0x3FE5374BC0000000, float %mul489)
  %div490 = fdiv float 1.000000e+00, %mul, !fpmath !11
  %mul491 = fmul float %div490, -4.131000e+03
  %call492 = tail call float @_Z3expf(float %mul491) #3
  %add493 = fadd float %call492, %94
  %call494 = tail call float @_Z4fmaxff(float %add493, float 0x3810000000000000) #3
  %call495 = tail call float @_Z5log10f(float %call494) #3
  %conv496 = fpext float %call495 to double
  %95 = tail call double @llvm.fmuladd.f64(double %conv496, double -1.270000e+00, double 7.500000e-01)
  %conv498 = fptrunc double %95 to float
  %conv499 = fpext float %call482 to double
  %96 = tail call double @llvm.fmuladd.f64(double %conv496, double 6.700000e-01, double 4.000000e-01)
  %sub502 = fsub double %conv499, %96
  %conv503 = fptrunc double %sub502 to float
  %conv504 = fpext float %conv503 to double
  %conv505 = fpext float %conv498 to double
  %97 = tail call double @llvm.fmuladd.f64(double %conv504, double -1.400000e-01, double %conv505)
  %div508 = fdiv double 1.000000e+00, %97
  %mul509 = fmul double %div508, %conv504
  %conv510 = fptrunc double %mul509 to float
  %mul512 = fmul float %conv510, %conv510
  %conv513 = fpext float %mul512 to double
  %add514 = fadd double %conv513, 1.000000e+00
  %div515 = fdiv double 1.000000e+00, %add514
  %mul516 = fmul double %div515, %conv496
  %conv517 = fptrunc double %mul516 to float
  %call518 = tail call float @_Z5exp10f(float %conv517) #3
  %mul519 = fmul float %call518, %conv480
  %mul523 = fmul float %93, %mul519
  store float %mul523, float* %arrayidx472, align 4, !tbaa !7
  %arrayidx529 = getelementptr inbounds float, float* %d, i64 %add471
  %98 = load float, float* %arrayidx529, align 4, !tbaa !7
  %mul530 = fmul float %mul519, %98
  store float %mul530, float* %arrayidx529, align 4, !tbaa !7
  %arrayidx536 = getelementptr inbounds float, float* %e, i64 %add.13
  %99 = load float, float* %arrayidx536, align 4, !tbaa !7
  %add538 = add i64 %call, 1048
  %arrayidx539 = getelementptr inbounds float, float* %c, i64 %add538
  %100 = load float, float* %arrayidx539, align 4, !tbaa !7
  %div540 = fdiv float 1.000000e+00, %100, !fpmath !11
  %mul541 = fmul float %div540, %conv108
  %mul542 = fmul float %99, %mul541
  %conv543 = fpext float %mul542 to double
  %add545 = fadd double %conv543, 1.000000e+00
  %div546 = fdiv double 1.000000e+00, %add545
  %mul547 = fmul double %div546, %conv543
  %conv548 = fptrunc double %mul547 to float
  %call549 = tail call float @_Z4fmaxff(float %mul542, float 0x3810000000000000) #3
  %call550 = tail call float @_Z5log10f(float %call549) #3
  %mul552 = fmul float %mul, 0xBF73BD60E0000000
  %call553 = tail call float @_Z3expf(float %mul552) #3
  %mul556 = fmul float %mul, 0xBF389C1E60000000
  %call557 = tail call float @_Z3expf(float %mul556) #3
  %mul558 = fmul float %call557, 0x3FE90624E0000000
  %101 = tail call float @llvm.fmuladd.f32(float %call553, float 0x3FCBE76C80000000, float %mul558)
  %mul560 = fmul float %div490, -6.095000e+03
  %call561 = tail call float @_Z3expf(float %mul560) #3
  %add562 = fadd float %call561, %101
  %call563 = tail call float @_Z4fmaxff(float %add562, float 0x3810000000000000) #3
  %call564 = tail call float @_Z5log10f(float %call563) #3
  %conv565 = fpext float %call564 to double
  %102 = tail call double @llvm.fmuladd.f64(double %conv565, double -1.270000e+00, double 7.500000e-01)
  %conv567 = fptrunc double %102 to float
  %conv568 = fpext float %call550 to double
  %103 = tail call double @llvm.fmuladd.f64(double %conv565, double 6.700000e-01, double 4.000000e-01)
  %sub571 = fsub double %conv568, %103
  %conv572 = fptrunc double %sub571 to float
  %conv573 = fpext float %conv572 to double
  %conv574 = fpext float %conv567 to double
  %104 = tail call double @llvm.fmuladd.f64(double %conv573, double -1.400000e-01, double %conv574)
  %div577 = fdiv double 1.000000e+00, %104
  %mul578 = fmul double %div577, %conv573
  %conv579 = fptrunc double %mul578 to float
  %mul581 = fmul float %conv579, %conv579
  %conv582 = fpext float %mul581 to double
  %add583 = fadd double %conv582, 1.000000e+00
  %div584 = fdiv double 1.000000e+00, %add583
  %mul585 = fmul double %div584, %conv565
  %conv586 = fptrunc double %mul585 to float
  %call587 = tail call float @_Z5exp10f(float %conv586) #3
  %mul588 = fmul float %call587, %conv548
  %mul592 = fmul float %100, %mul588
  store float %mul592, float* %arrayidx539, align 4, !tbaa !7
  %arrayidx598 = getelementptr inbounds float, float* %d, i64 %add538
  %105 = load float, float* %arrayidx598, align 4, !tbaa !7
  %mul599 = fmul float %mul588, %105
  store float %mul599, float* %arrayidx598, align 4, !tbaa !7
  %arrayidx605 = getelementptr inbounds float, float* %e, i64 %add.14
  %106 = load float, float* %arrayidx605, align 4, !tbaa !7
  %add607 = add i64 %call, 1152
  %arrayidx608 = getelementptr inbounds float, float* %c, i64 %add607
  %107 = load float, float* %arrayidx608, align 4, !tbaa !7
  %div609 = fdiv float 1.000000e+00, %107, !fpmath !11
  %mul610 = fmul float %div609, %conv108
  %mul611 = fmul float %106, %mul610
  %conv612 = fpext float %mul611 to double
  %add614 = fadd double %conv612, 1.000000e+00
  %div615 = fdiv double 1.000000e+00, %add614
  %mul616 = fmul double %div615, %conv612
  %conv617 = fptrunc double %mul616 to float
  %call618 = tail call float @_Z4fmaxff(float %mul611, float 0x3810000000000000) #3
  %call619 = tail call float @_Z5log10f(float %call618) #3
  %mul621 = fmul float %mul, 0xBF48715A80000000
  %call622 = tail call float @_Z3expf(float %mul621) #3
  %mul625 = fmul float %mul, 0xBEF179ECA0000000
  %call626 = tail call float @_Z3expf(float %mul625) #3
  %mul627 = fmul float %call626, 0x3FC6666660000000
  %108 = tail call float @llvm.fmuladd.f32(float %call622, float 0x3FEA666660000000, float %mul627)
  %mul629 = fmul float %div490, 0xC0C3CDE660000000
  %call630 = tail call float @_Z3expf(float %mul629) #3
  %add631 = fadd float %call630, %108
  %call632 = tail call float @_Z4fmaxff(float %add631, float 0x3810000000000000) #3
  %call633 = tail call float @_Z5log10f(float %call632) #3
  %conv634 = fpext float %call633 to double
  %109 = tail call double @llvm.fmuladd.f64(double %conv634, double -1.270000e+00, double 7.500000e-01)
  %conv636 = fptrunc double %109 to float
  %conv637 = fpext float %call619 to double
  %110 = tail call double @llvm.fmuladd.f64(double %conv634, double 6.700000e-01, double 4.000000e-01)
  %sub640 = fsub double %conv637, %110
  %conv641 = fptrunc double %sub640 to float
  %conv642 = fpext float %conv641 to double
  %conv643 = fpext float %conv636 to double
  %111 = tail call double @llvm.fmuladd.f64(double %conv642, double -1.400000e-01, double %conv643)
  %div646 = fdiv double 1.000000e+00, %111
  %mul647 = fmul double %div646, %conv642
  %conv648 = fptrunc double %mul647 to float
  %mul650 = fmul float %conv648, %conv648
  %conv651 = fpext float %mul650 to double
  %add652 = fadd double %conv651, 1.000000e+00
  %div653 = fdiv double 1.000000e+00, %add652
  %mul654 = fmul double %div653, %conv634
  %conv655 = fptrunc double %mul654 to float
  %call656 = tail call float @_Z5exp10f(float %conv655) #3
  %mul657 = fmul float %call656, %conv617
  %mul661 = fmul float %107, %mul657
  store float %mul661, float* %arrayidx608, align 4, !tbaa !7
  %arrayidx667 = getelementptr inbounds float, float* %d, i64 %add607
  %112 = load float, float* %arrayidx667, align 4, !tbaa !7
  %mul668 = fmul float %mul657, %112
  store float %mul668, float* %arrayidx667, align 4, !tbaa !7
  %arrayidx674 = getelementptr inbounds float, float* %e, i64 %add.15
  %113 = load float, float* %arrayidx674, align 4, !tbaa !7
  %add676 = add i64 %call, 1176
  %arrayidx677 = getelementptr inbounds float, float* %c, i64 %add676
  %114 = load float, float* %arrayidx677, align 4, !tbaa !7
  %div678 = fdiv float 1.000000e+00, %114, !fpmath !11
  %mul679 = fmul float %div678, %conv108
  %mul680 = fmul float %113, %mul679
  %conv681 = fpext float %mul680 to double
  %add683 = fadd double %conv681, 1.000000e+00
  %div684 = fdiv double 1.000000e+00, %add683
  %mul685 = fmul double %div684, %conv681
  %conv686 = fptrunc double %mul685 to float
  %call687 = tail call float @_Z4fmaxff(float %mul680, float 0x3810000000000000) #3
  %call688 = tail call float @_Z5log10f(float %call687) #3
  %mul690 = fmul float %mul, 0xBF1D745260000000
  %call691 = tail call float @_Z3expf(float %mul690) #3
  %mul694 = fmul float %mul, 0xBF2E21A9A0000000
  %call695 = tail call float @_Z3expf(float %mul694) #3
  %mul696 = fmul float %call695, 0x3FE19999A0000000
  %115 = tail call float @llvm.fmuladd.f32(float %call691, float 0x3FDCCCCCC0000000, float %mul696)
  %mul698 = fmul float %div490, -7.244000e+03
  %call699 = tail call float @_Z3expf(float %mul698) #3
  %add700 = fadd float %call699, %115
  %call701 = tail call float @_Z4fmaxff(float %add700, float 0x3810000000000000) #3
  %call702 = tail call float @_Z5log10f(float %call701) #3
  %conv703 = fpext float %call702 to double
  %116 = tail call double @llvm.fmuladd.f64(double %conv703, double -1.270000e+00, double 7.500000e-01)
  %conv705 = fptrunc double %116 to float
  %conv706 = fpext float %call688 to double
  %117 = tail call double @llvm.fmuladd.f64(double %conv703, double 6.700000e-01, double 4.000000e-01)
  %sub709 = fsub double %conv706, %117
  %conv710 = fptrunc double %sub709 to float
  %conv711 = fpext float %conv710 to double
  %conv712 = fpext float %conv705 to double
  %118 = tail call double @llvm.fmuladd.f64(double %conv711, double -1.400000e-01, double %conv712)
  %div715 = fdiv double 1.000000e+00, %118
  %mul716 = fmul double %div715, %conv711
  %conv717 = fptrunc double %mul716 to float
  %mul719 = fmul float %conv717, %conv717
  %conv720 = fpext float %mul719 to double
  %add721 = fadd double %conv720, 1.000000e+00
  %div722 = fdiv double 1.000000e+00, %add721
  %mul723 = fmul double %div722, %conv703
  %conv724 = fptrunc double %mul723 to float
  %call725 = tail call float @_Z5exp10f(float %conv724) #3
  %mul726 = fmul float %call725, %conv686
  %mul730 = fmul float %114, %mul726
  store float %mul730, float* %arrayidx677, align 4, !tbaa !7
  %arrayidx736 = getelementptr inbounds float, float* %d, i64 %add676
  %119 = load float, float* %arrayidx736, align 4, !tbaa !7
  %mul737 = fmul float %mul726, %119
  store float %mul737, float* %arrayidx736, align 4, !tbaa !7
  %arrayidx743 = getelementptr inbounds float, float* %e, i64 %add.16
  %120 = load float, float* %arrayidx743, align 4, !tbaa !7
  %add745 = add i64 %call, 1232
  %arrayidx746 = getelementptr inbounds float, float* %c, i64 %add745
  %121 = load float, float* %arrayidx746, align 4, !tbaa !7
  %div747 = fdiv float 1.000000e+00, %121, !fpmath !11
  %mul748 = fmul float %div747, %conv108
  %mul749 = fmul float %120, %mul748
  %conv750 = fpext float %mul749 to double
  %add752 = fadd double %conv750, 1.000000e+00
  %div753 = fdiv double 1.000000e+00, %add752
  %mul754 = fmul double %div753, %conv750
  %conv755 = fptrunc double %mul754 to float
  %call756 = tail call float @_Z4fmaxff(float %mul749, float 0x3810000000000000) #3
  %call757 = tail call float @_Z5log10f(float %call756) #3
  %mul759 = fmul float %mul, 0xBF76C16C20000000
  %call760 = tail call float @_Z3expf(float %mul759) #3
  %mul763 = fmul float %mul, 0xBF4FA8EF60000000
  %call764 = tail call float @_Z3expf(float %mul763) #3
  %mul765 = fmul float %call764, 0x3FE7810620000000
  %122 = tail call float @llvm.fmuladd.f32(float %call760, float 0x3FD0FDF3C0000000, float %mul765)
  %mul767 = fmul float %div490, -5.417000e+03
  %call768 = tail call float @_Z3expf(float %mul767) #3
  %add769 = fadd float %call768, %122
  %call770 = tail call float @_Z4fmaxff(float %add769, float 0x3810000000000000) #3
  %call771 = tail call float @_Z5log10f(float %call770) #3
  %conv772 = fpext float %call771 to double
  %123 = tail call double @llvm.fmuladd.f64(double %conv772, double -1.270000e+00, double 7.500000e-01)
  %conv774 = fptrunc double %123 to float
  %conv775 = fpext float %call757 to double
  %124 = tail call double @llvm.fmuladd.f64(double %conv772, double 6.700000e-01, double 4.000000e-01)
  %sub778 = fsub double %conv775, %124
  %conv779 = fptrunc double %sub778 to float
  %conv780 = fpext float %conv779 to double
  %conv781 = fpext float %conv774 to double
  %125 = tail call double @llvm.fmuladd.f64(double %conv780, double -1.400000e-01, double %conv781)
  %div784 = fdiv double 1.000000e+00, %125
  %mul785 = fmul double %div784, %conv780
  %conv786 = fptrunc double %mul785 to float
  %mul788 = fmul float %conv786, %conv786
  %conv789 = fpext float %mul788 to double
  %add790 = fadd double %conv789, 1.000000e+00
  %div791 = fdiv double 1.000000e+00, %add790
  %mul792 = fmul double %div791, %conv772
  %conv793 = fptrunc double %mul792 to float
  %call794 = tail call float @_Z5exp10f(float %conv793) #3
  %mul795 = fmul float %call794, %conv755
  %mul799 = fmul float %121, %mul795
  store float %mul799, float* %arrayidx746, align 4, !tbaa !7
  %arrayidx805 = getelementptr inbounds float, float* %d, i64 %add745
  %126 = load float, float* %arrayidx805, align 4, !tbaa !7
  %mul806 = fmul float %mul795, %126
  store float %mul806, float* %arrayidx805, align 4, !tbaa !7
  %arrayidx812 = getelementptr inbounds float, float* %e, i64 %add.17
  %127 = load float, float* %arrayidx812, align 4, !tbaa !7
  %add814 = add i64 %call, 1240
  %arrayidx815 = getelementptr inbounds float, float* %c, i64 %add814
  %128 = load float, float* %arrayidx815, align 4, !tbaa !7
  %div816 = fdiv float 1.000000e+00, %128, !fpmath !11
  %mul817 = fmul float %div816, %conv108
  %mul818 = fmul float %127, %mul817
  %conv819 = fpext float %mul818 to double
  %add821 = fadd double %conv819, 1.000000e+00
  %div822 = fdiv double 1.000000e+00, %add821
  %mul823 = fmul double %div822, %conv819
  %conv824 = fptrunc double %mul823 to float
  %call825 = tail call float @_Z4fmaxff(float %mul818, float 0x3810000000000000) #3
  %call826 = tail call float @_Z5log10f(float %call825) #3
  %mul828 = fmul float %mul, 0xBF73813820000000
  %call829 = tail call float @_Z3expf(float %mul828) #3
  %mul832 = fmul float %mul, 0xBF50A68100000000
  %call833 = tail call float @_Z3expf(float %mul832) #3
  %mul834 = fmul float %call833, 0x3FEF35A860000000
  %129 = tail call float @llvm.fmuladd.f32(float %call829, float 0x3F994AF500000000, float %mul834)
  %mul836 = fmul float %div490, -4.374000e+03
  %call837 = tail call float @_Z3expf(float %mul836) #3
  %add838 = fadd float %call837, %129
  %call839 = tail call float @_Z4fmaxff(float %add838, float 0x3810000000000000) #3
  %call840 = tail call float @_Z5log10f(float %call839) #3
  %conv841 = fpext float %call840 to double
  %130 = tail call double @llvm.fmuladd.f64(double %conv841, double -1.270000e+00, double 7.500000e-01)
  %conv843 = fptrunc double %130 to float
  %conv844 = fpext float %call826 to double
  %131 = tail call double @llvm.fmuladd.f64(double %conv841, double 6.700000e-01, double 4.000000e-01)
  %sub847 = fsub double %conv844, %131
  %conv848 = fptrunc double %sub847 to float
  %conv849 = fpext float %conv848 to double
  %conv850 = fpext float %conv843 to double
  %132 = tail call double @llvm.fmuladd.f64(double %conv849, double -1.400000e-01, double %conv850)
  %div853 = fdiv double 1.000000e+00, %132
  %mul854 = fmul double %div853, %conv849
  %conv855 = fptrunc double %mul854 to float
  %mul857 = fmul float %conv855, %conv855
  %conv858 = fpext float %mul857 to double
  %add859 = fadd double %conv858, 1.000000e+00
  %div860 = fdiv double 1.000000e+00, %add859
  %mul861 = fmul double %div860, %conv841
  %conv862 = fptrunc double %mul861 to float
  %call863 = tail call float @_Z5exp10f(float %conv862) #3
  %mul864 = fmul float %call863, %conv824
  %mul868 = fmul float %128, %mul864
  store float %mul868, float* %arrayidx815, align 4, !tbaa !7
  %arrayidx874 = getelementptr inbounds float, float* %d, i64 %add814
  %133 = load float, float* %arrayidx874, align 4, !tbaa !7
  %mul875 = fmul float %mul864, %133
  store float %mul875, float* %arrayidx874, align 4, !tbaa !7
  %arrayidx881 = getelementptr inbounds float, float* %e, i64 %add.18
  %134 = load float, float* %arrayidx881, align 4, !tbaa !7
  %add883 = add i64 %call, 1352
  %arrayidx884 = getelementptr inbounds float, float* %c, i64 %add883
  %135 = load float, float* %arrayidx884, align 4, !tbaa !7
  %div885 = fdiv float 1.000000e+00, %135, !fpmath !11
  %mul886 = fmul float %div885, %conv108
  %mul887 = fmul float %134, %mul886
  %conv888 = fpext float %mul887 to double
  %add890 = fadd double %conv888, 1.000000e+00
  %div891 = fdiv double 1.000000e+00, %add890
  %mul892 = fmul double %div891, %conv888
  %conv893 = fptrunc double %mul892 to float
  %call894 = tail call float @_Z4fmaxff(float %mul887, float 0x3810000000000000) #3
  %call895 = tail call float @_Z5log10f(float %call894) #3
  %mul897 = fmul float %mul, 0xBF80624DE0000000
  %call898 = tail call float @_Z3expf(float %mul897) #3
  %mul901 = fmul float %mul, 0xBF3D88B5E0000000
  %call902 = tail call float @_Z3expf(float %mul901) #3
  %mul903 = fmul float %call902, 0x3FEAF34D60000000
  %136 = tail call float @llvm.fmuladd.f32(float %call898, float 0x3FC432CA60000000, float %mul903)
  %mul905 = fmul float %div490, -6.882000e+03
  %call906 = tail call float @_Z3expf(float %mul905) #3
  %add907 = fadd float %call906, %136
  %call908 = tail call float @_Z4fmaxff(float %add907, float 0x3810000000000000) #3
  %call909 = tail call float @_Z5log10f(float %call908) #3
  %conv910 = fpext float %call909 to double
  %137 = tail call double @llvm.fmuladd.f64(double %conv910, double -1.270000e+00, double 7.500000e-01)
  %conv912 = fptrunc double %137 to float
  %conv913 = fpext float %call895 to double
  %138 = tail call double @llvm.fmuladd.f64(double %conv910, double 6.700000e-01, double 4.000000e-01)
  %sub916 = fsub double %conv913, %138
  %conv917 = fptrunc double %sub916 to float
  %conv918 = fpext float %conv917 to double
  %conv919 = fpext float %conv912 to double
  %139 = tail call double @llvm.fmuladd.f64(double %conv918, double -1.400000e-01, double %conv919)
  %div922 = fdiv double 1.000000e+00, %139
  %mul923 = fmul double %div922, %conv918
  %conv924 = fptrunc double %mul923 to float
  %mul926 = fmul float %conv924, %conv924
  %conv927 = fpext float %mul926 to double
  %add928 = fadd double %conv927, 1.000000e+00
  %div929 = fdiv double 1.000000e+00, %add928
  %mul930 = fmul double %div929, %conv910
  %conv931 = fptrunc double %mul930 to float
  %call932 = tail call float @_Z5exp10f(float %conv931) #3
  %mul933 = fmul float %call932, %conv893
  %mul937 = fmul float %135, %mul933
  store float %mul937, float* %arrayidx884, align 4, !tbaa !7
  %arrayidx943 = getelementptr inbounds float, float* %d, i64 %add883
  %140 = load float, float* %arrayidx943, align 4, !tbaa !7
  %mul944 = fmul float %mul933, %140
  store float %mul944, float* %arrayidx943, align 4, !tbaa !7
  %arrayidx950 = getelementptr inbounds float, float* %e, i64 %add.19
  %141 = load float, float* %arrayidx950, align 4, !tbaa !7
  %add952 = add i64 %call, 1472
  %arrayidx953 = getelementptr inbounds float, float* %c, i64 %add952
  %142 = load float, float* %arrayidx953, align 4, !tbaa !7
  %div954 = fdiv float 1.000000e+00, %142, !fpmath !11
  %mul955 = fmul float %div954, %conv108
  %mul956 = fmul float %141, %mul955
  %conv957 = fpext float %mul956 to double
  %add959 = fadd double %conv957, 1.000000e+00
  %div960 = fdiv double 1.000000e+00, %add959
  %mul961 = fmul double %div960, %conv957
  %conv962 = fptrunc double %mul961 to float
  %call963 = tail call float @_Z4fmaxff(float %mul956, float 0x3810000000000000) #3
  %call964 = tail call float @_Z5log10f(float %call963) #3
  %mul966 = fmul float %mul, 0xBF4DE1A6E0000000
  %call967 = tail call float @_Z3expf(float %mul966) #3
  %mul968 = fmul float %call967, 0x3FEF5C2900000000
  %conv969 = fpext float %mul968 to double
  %conv973 = fpext float %call967 to double
  %143 = tail call double @llvm.fmuladd.f64(double %conv973, double 2.000000e-02, double %conv969)
  %mul976 = fmul float %div490, -6.859500e+03
  %call977 = tail call float @_Z3expf(float %mul976) #3
  %conv978 = fpext float %call977 to double
  %add979 = fadd double %143, %conv978
  %conv980 = fptrunc double %add979 to float
  %call981 = tail call float @_Z4fmaxff(float %conv980, float 0x3810000000000000) #3
  %call982 = tail call float @_Z5log10f(float %call981) #3
  %conv983 = fpext float %call982 to double
  %144 = tail call double @llvm.fmuladd.f64(double %conv983, double -1.270000e+00, double 7.500000e-01)
  %conv985 = fptrunc double %144 to float
  %conv986 = fpext float %call964 to double
  %145 = tail call double @llvm.fmuladd.f64(double %conv983, double 6.700000e-01, double 4.000000e-01)
  %sub989 = fsub double %conv986, %145
  %conv990 = fptrunc double %sub989 to float
  %conv991 = fpext float %conv990 to double
  %conv992 = fpext float %conv985 to double
  %146 = tail call double @llvm.fmuladd.f64(double %conv991, double -1.400000e-01, double %conv992)
  %div995 = fdiv double 1.000000e+00, %146
  %mul996 = fmul double %div995, %conv991
  %conv997 = fptrunc double %mul996 to float
  %mul999 = fmul float %conv997, %conv997
  %conv1000 = fpext float %mul999 to double
  %add1001 = fadd double %conv1000, 1.000000e+00
  %div1002 = fdiv double 1.000000e+00, %add1001
  %mul1003 = fmul double %div1002, %conv983
  %conv1004 = fptrunc double %mul1003 to float
  %call1005 = tail call float @_Z5exp10f(float %conv1004) #3
  %mul1006 = fmul float %call1005, %conv962
  %mul1010 = fmul float %142, %mul1006
  store float %mul1010, float* %arrayidx953, align 4, !tbaa !7
  %arrayidx1016 = getelementptr inbounds float, float* %d, i64 %add952
  %147 = load float, float* %arrayidx1016, align 4, !tbaa !7
  %mul1017 = fmul float %147, %mul1006
  store float %mul1017, float* %arrayidx1016, align 4, !tbaa !7
  %arrayidx1023 = getelementptr inbounds float, float* %e, i64 %add.20
  %148 = load float, float* %arrayidx1023, align 4, !tbaa !7
  %add1025 = add i64 %call, 1512
  %arrayidx1026 = getelementptr inbounds float, float* %c, i64 %add1025
  %149 = load float, float* %arrayidx1026, align 4, !tbaa !7
  %div1027 = fdiv float 1.000000e+00, %149, !fpmath !11
  %mul1028 = fmul float %div1027, %conv262
  %mul1029 = fmul float %148, %mul1028
  %conv1030 = fpext float %mul1029 to double
  %add1032 = fadd double %conv1030, 1.000000e+00
  %div1033 = fdiv double 1.000000e+00, %add1032
  %mul1034 = fmul double %div1033, %conv1030
  %conv1035 = fptrunc double %mul1034 to float
  %call1036 = tail call float @_Z4fmaxff(float %mul1029, float 0x3810000000000000) #3
  %call1037 = tail call float @_Z5log10f(float %call1036) #3
  %mul1039 = fmul float %mul, 0xBF50624DE0000000
  %call1040 = tail call float @_Z3expf(float %mul1039) #3
  %conv1041 = fpext float %call1040 to double
  %mul1044 = fmul float %mul, 0xBF49038480000000
  %call1045 = tail call float @_Z3expf(float %mul1044) #3
  %conv1046 = fpext float %call1045 to double
  %150 = tail call double @llvm.fmuladd.f64(double %conv1041, double 0.000000e+00, double %conv1046)
  %mul1049 = fmul float %div490, -4.809700e+04
  %call1050 = tail call float @_Z3expf(float %mul1049) #3
  %conv1051 = fpext float %call1050 to double
  %add1052 = fadd double %150, %conv1051
  %conv1053 = fptrunc double %add1052 to float
  %call1054 = tail call float @_Z4fmaxff(float %conv1053, float 0x3810000000000000) #3
  %call1055 = tail call float @_Z5log10f(float %call1054) #3
  %conv1056 = fpext float %call1055 to double
  %151 = tail call double @llvm.fmuladd.f64(double %conv1056, double -1.270000e+00, double 7.500000e-01)
  %conv1058 = fptrunc double %151 to float
  %conv1059 = fpext float %call1037 to double
  %152 = tail call double @llvm.fmuladd.f64(double %conv1056, double 6.700000e-01, double 4.000000e-01)
  %sub1062 = fsub double %conv1059, %152
  %conv1063 = fptrunc double %sub1062 to float
  %conv1064 = fpext float %conv1063 to double
  %conv1065 = fpext float %conv1058 to double
  %153 = tail call double @llvm.fmuladd.f64(double %conv1064, double -1.400000e-01, double %conv1065)
  %div1068 = fdiv double 1.000000e+00, %153
  %mul1069 = fmul double %div1068, %conv1064
  %conv1070 = fptrunc double %mul1069 to float
  %mul1072 = fmul float %conv1070, %conv1070
  %conv1073 = fpext float %mul1072 to double
  %add1074 = fadd double %conv1073, 1.000000e+00
  %div1075 = fdiv double 1.000000e+00, %add1074
  %mul1076 = fmul double %div1075, %conv1056
  %conv1077 = fptrunc double %mul1076 to float
  %call1078 = tail call float @_Z5exp10f(float %conv1077) #3
  %mul1079 = fmul float %call1078, %conv1035
  %mul1083 = fmul float %149, %mul1079
  store float %mul1083, float* %arrayidx1026, align 4, !tbaa !7
  %arrayidx1089 = getelementptr inbounds float, float* %d, i64 %add1025
  %154 = load float, float* %arrayidx1089, align 4, !tbaa !7
  %mul1090 = fmul float %mul1079, %154
  store float %mul1090, float* %arrayidx1089, align 4, !tbaa !7
  ret void
}

; Function Attrs: convergent nounwind readnone
declare dso_local i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z5log10f(float) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z4fmaxff(float, float) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z3expf(float) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z5exp10f(float) local_unnamed_addr #1

attributes #0 = { convergent nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "uniform-work-group-size"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { convergent nounwind readnone }

!llvm.module.flags = !{!0}
!opencl.ocl.version = !{!1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 2, i32 0}
!2 = !{!"clang version 10.0.0 "}
!3 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 0}
!4 = !{!"none", !"none", !"none", !"none", !"none", !"none"}
!5 = !{!"float*", !"float*", !"float*", !"float*", !"float*", !"float"}
!6 = !{!"const", !"const", !"", !"", !"const", !""}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{float 2.500000e+00}
