; ModuleID = 'src/657.src'
source_filename = "src/657.src"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: convergent nofree nounwind uwtable
define dso_local spir_kernel void @A(float* nocapture readonly %a, float* nocapture readonly %b, float* nocapture %c, float* nocapture %d, float* nocapture readonly %e, float %f) local_unnamed_addr #0 !kernel_arg_addr_space !3 !kernel_arg_access_qual !4 !kernel_arg_type !5 !kernel_arg_base_type !5 !kernel_arg_type_qual !6 {
entry:
  %call = tail call i64 @_Z13get_global_idj(i32 0) #3
  %arrayidx = getelementptr inbounds float, float* %a, i64 %call
  %0 = load float, float* %arrayidx, align 4, !tbaa !7
  %arrayidx4 = getelementptr inbounds float, float* %b, i64 %call
  %1 = load float, float* %arrayidx4, align 4, !tbaa !7
  %add5 = fadd float %1, 0.000000e+00
  %add.1 = add i64 %call, 8
  %arrayidx4.1 = getelementptr inbounds float, float* %b, i64 %add.1
  %2 = load float, float* %arrayidx4.1, align 4, !tbaa !7
  %add5.1 = fadd float %add5, %2
  %add.2 = add i64 %call, 16
  %arrayidx4.2 = getelementptr inbounds float, float* %b, i64 %add.2
  %3 = load float, float* %arrayidx4.2, align 4, !tbaa !7
  %add5.2 = fadd float %add5.1, %3
  %add.3 = add i64 %call, 24
  %arrayidx4.3 = getelementptr inbounds float, float* %b, i64 %add.3
  %4 = load float, float* %arrayidx4.3, align 4, !tbaa !7
  %add5.3 = fadd float %add5.2, %4
  %add.4 = add i64 %call, 32
  %arrayidx4.4 = getelementptr inbounds float, float* %b, i64 %add.4
  %5 = load float, float* %arrayidx4.4, align 4, !tbaa !7
  %add5.4 = fadd float %add5.3, %5
  %add.5 = add i64 %call, 40
  %arrayidx4.5 = getelementptr inbounds float, float* %b, i64 %add.5
  %6 = load float, float* %arrayidx4.5, align 4, !tbaa !7
  %add5.5 = fadd float %add5.4, %6
  %add.6 = add i64 %call, 48
  %arrayidx4.6 = getelementptr inbounds float, float* %b, i64 %add.6
  %7 = load float, float* %arrayidx4.6, align 4, !tbaa !7
  %add5.6 = fadd float %add5.5, %7
  %add.7 = add i64 %call, 56
  %arrayidx4.7 = getelementptr inbounds float, float* %b, i64 %add.7
  %8 = load float, float* %arrayidx4.7, align 4, !tbaa !7
  %add5.7 = fadd float %add5.6, %8
  %add.8 = add i64 %call, 64
  %arrayidx4.8 = getelementptr inbounds float, float* %b, i64 %add.8
  %9 = load float, float* %arrayidx4.8, align 4, !tbaa !7
  %add5.8 = fadd float %add5.7, %9
  %add.9 = add i64 %call, 72
  %arrayidx4.9 = getelementptr inbounds float, float* %b, i64 %add.9
  %10 = load float, float* %arrayidx4.9, align 4, !tbaa !7
  %add5.9 = fadd float %add5.8, %10
  %add.10 = add i64 %call, 80
  %arrayidx4.10 = getelementptr inbounds float, float* %b, i64 %add.10
  %11 = load float, float* %arrayidx4.10, align 4, !tbaa !7
  %add5.10 = fadd float %add5.9, %11
  %add.11 = add i64 %call, 88
  %arrayidx4.11 = getelementptr inbounds float, float* %b, i64 %add.11
  %12 = load float, float* %arrayidx4.11, align 4, !tbaa !7
  %add5.11 = fadd float %add5.10, %12
  %add.12 = add i64 %call, 96
  %arrayidx4.12 = getelementptr inbounds float, float* %b, i64 %add.12
  %13 = load float, float* %arrayidx4.12, align 4, !tbaa !7
  %add5.12 = fadd float %add5.11, %13
  %add.13 = add i64 %call, 104
  %arrayidx4.13 = getelementptr inbounds float, float* %b, i64 %add.13
  %14 = load float, float* %arrayidx4.13, align 4, !tbaa !7
  %add5.13 = fadd float %add5.12, %14
  %add.14 = add i64 %call, 112
  %arrayidx4.14 = getelementptr inbounds float, float* %b, i64 %add.14
  %15 = load float, float* %arrayidx4.14, align 4, !tbaa !7
  %add5.14 = fadd float %add5.13, %15
  %add.15 = add i64 %call, 120
  %arrayidx4.15 = getelementptr inbounds float, float* %b, i64 %add.15
  %16 = load float, float* %arrayidx4.15, align 4, !tbaa !7
  %add5.15 = fadd float %add5.14, %16
  %add.16 = add i64 %call, 128
  %arrayidx4.16 = getelementptr inbounds float, float* %b, i64 %add.16
  %17 = load float, float* %arrayidx4.16, align 4, !tbaa !7
  %add5.16 = fadd float %add5.15, %17
  %add.17 = add i64 %call, 136
  %arrayidx4.17 = getelementptr inbounds float, float* %b, i64 %add.17
  %18 = load float, float* %arrayidx4.17, align 4, !tbaa !7
  %add5.17 = fadd float %add5.16, %18
  %add.18 = add i64 %call, 144
  %arrayidx4.18 = getelementptr inbounds float, float* %b, i64 %add.18
  %19 = load float, float* %arrayidx4.18, align 4, !tbaa !7
  %add5.18 = fadd float %add5.17, %19
  %add.19 = add i64 %call, 152
  %arrayidx4.19 = getelementptr inbounds float, float* %b, i64 %add.19
  %20 = load float, float* %arrayidx4.19, align 4, !tbaa !7
  %add5.19 = fadd float %add5.18, %20
  %add.20 = add i64 %call, 160
  %arrayidx4.20 = getelementptr inbounds float, float* %b, i64 %add.20
  %21 = load float, float* %arrayidx4.20, align 4, !tbaa !7
  %add5.20 = fadd float %add5.19, %21
  %add.21 = add i64 %call, 168
  %arrayidx4.21 = getelementptr inbounds float, float* %b, i64 %add.21
  %22 = load float, float* %arrayidx4.21, align 4, !tbaa !7
  %add5.21 = fadd float %add5.20, %22
  %mul = fmul float %0, %f
  %add9 = fadd float %add5.21, %1
  %conv10 = fpext float %add9 to double
  %conv14 = fpext float %6 to double
  %23 = tail call double @llvm.fmuladd.f64(double %conv14, double 5.000000e+00, double %conv10)
  %conv19 = fpext float %10 to double
  %add20 = fadd double %23, %conv19
  %conv24 = fpext float %11 to double
  %24 = tail call double @llvm.fmuladd.f64(double %conv24, double 5.000000e-01, double %add20)
  %conv29 = fpext float %12 to double
  %add30 = fadd double %24, %conv29
  %conv34 = fpext float %16 to double
  %25 = tail call double @llvm.fmuladd.f64(double %conv34, double 2.000000e+00, double %add30)
  %conv39 = fpext float %14 to double
  %26 = tail call double @llvm.fmuladd.f64(double %conv39, double 2.000000e+00, double %25)
  %conv44 = fpext float %15 to double
  %27 = tail call double @llvm.fmuladd.f64(double %conv44, double 2.000000e+00, double %26)
  %conv46 = fptrunc double %27 to float
  %mul80 = fmul float %14, 1.500000e+00
  %conv81 = fpext float %mul80 to double
  %add82 = fadd double %25, %conv81
  %mul86 = fmul float %15, 1.500000e+00
  %conv87 = fpext float %mul86 to double
  %add88 = fadd double %add82, %conv87
  %conv89 = fptrunc double %add88 to float
  %arrayidx133 = getelementptr inbounds float, float* %e, i64 %call
  %28 = load float, float* %arrayidx133, align 4, !tbaa !7
  %arrayidx136 = getelementptr inbounds float, float* %c, i64 %add.15
  %29 = load float, float* %arrayidx136, align 4, !tbaa !7
  %div = fdiv float 1.000000e+00, %29, !fpmath !11
  %mul137 = fmul float %div, %conv46
  %mul138 = fmul float %28, %mul137
  %conv139 = fpext float %mul138 to double
  %add141 = fadd double %conv139, 1.000000e+00
  %div142 = fdiv double 1.000000e+00, %add141
  %mul143 = fmul double %div142, %conv139
  %conv144 = fptrunc double %mul143 to float
  %call145 = tail call float @_Z4fmaxff(float %mul138, float 0x3810000000000000) #3
  %call146 = tail call float @_Z5log10f(float %call145) #3
  %mul147 = fmul float %mul, 0xBF85C98820000000
  %call148 = tail call float @_Z3expf(float %mul147) #3
  %mul151 = fmul float %mul, 0xBF42A91CA0000000
  %call152 = tail call float @_Z3expf(float %mul151) #3
  %mul153 = fmul float %call152, 0x3FE781D7E0000000
  %30 = tail call float @llvm.fmuladd.f32(float %call148, float 0x3FD0FC5040000000, float %mul153)
  %div154 = fdiv float 1.000000e+00, %mul, !fpmath !11
  %mul155 = fmul float %div154, -5.182000e+03
  %call156 = tail call float @_Z3expf(float %mul155) #3
  %add157 = fadd float %call156, %30
  %call158 = tail call float @_Z4fmaxff(float %add157, float 0x3810000000000000) #3
  %call159 = tail call float @_Z5log10f(float %call158) #3
  %conv160 = fpext float %call159 to double
  %31 = tail call double @llvm.fmuladd.f64(double %conv160, double -1.270000e+00, double 7.500000e-01)
  %conv162 = fptrunc double %31 to float
  %conv163 = fpext float %call146 to double
  %32 = tail call double @llvm.fmuladd.f64(double %conv160, double 6.700000e-01, double 4.000000e-01)
  %sub166 = fsub double %conv163, %32
  %conv167 = fptrunc double %sub166 to float
  %conv168 = fpext float %conv167 to double
  %conv169 = fpext float %conv162 to double
  %33 = tail call double @llvm.fmuladd.f64(double %conv168, double -1.400000e-01, double %conv169)
  %div172 = fdiv double 1.000000e+00, %33
  %mul173 = fmul double %div172, %conv168
  %conv174 = fptrunc double %mul173 to float
  %mul176 = fmul float %conv174, %conv174
  %conv177 = fpext float %mul176 to double
  %add178 = fadd double %conv177, 1.000000e+00
  %div179 = fdiv double 1.000000e+00, %add178
  %mul180 = fmul double %div179, %conv160
  %conv181 = fptrunc double %mul180 to float
  %call182 = tail call float @_Z5exp10f(float %conv181) #3
  %mul183 = fmul float %call182, %conv144
  %mul187 = fmul float %29, %mul183
  store float %mul187, float* %arrayidx136, align 4, !tbaa !7
  %arrayidx193 = getelementptr inbounds float, float* %d, i64 %add.15
  %34 = load float, float* %arrayidx193, align 4, !tbaa !7
  %mul194 = fmul float %mul183, %34
  store float %mul194, float* %arrayidx193, align 4, !tbaa !7
  %arrayidx200 = getelementptr inbounds float, float* %e, i64 %add.1
  %35 = load float, float* %arrayidx200, align 4, !tbaa !7
  %add202 = add i64 %call, 240
  %arrayidx203 = getelementptr inbounds float, float* %c, i64 %add202
  %36 = load float, float* %arrayidx203, align 4, !tbaa !7
  %div204 = fdiv float 1.000000e+00, %36, !fpmath !11
  %mul205 = fmul float %div204, %conv46
  %mul206 = fmul float %35, %mul205
  %conv207 = fpext float %mul206 to double
  %add209 = fadd double %conv207, 1.000000e+00
  %div210 = fdiv double 1.000000e+00, %add209
  %mul211 = fmul double %div210, %conv207
  %conv212 = fptrunc double %mul211 to float
  %call213 = tail call float @_Z4fmaxff(float %mul206, float 0x3810000000000000) #3
  %call214 = tail call float @_Z5log10f(float %call213) #3
  %mul216 = fmul float %mul, 0xBF74CAB880000000
  %call217 = tail call float @_Z3expf(float %mul216) #3
  %mul220 = fmul float %mul, 0xBF454725E0000000
  %call221 = tail call float @_Z3expf(float %mul220) #3
  %mul222 = fmul float %call221, 0x3FEDD2F1A0000000
  %37 = tail call float @llvm.fmuladd.f32(float %call217, float 0x3FB16872C0000000, float %mul222)
  %mul224 = fmul float %div154, -1.030000e+04
  %call225 = tail call float @_Z3expf(float %mul224) #3
  %add226 = fadd float %call225, %37
  %call227 = tail call float @_Z4fmaxff(float %add226, float 0x3810000000000000) #3
  %call228 = tail call float @_Z5log10f(float %call227) #3
  %conv229 = fpext float %call228 to double
  %38 = tail call double @llvm.fmuladd.f64(double %conv229, double -1.270000e+00, double 7.500000e-01)
  %conv231 = fptrunc double %38 to float
  %conv232 = fpext float %call214 to double
  %39 = tail call double @llvm.fmuladd.f64(double %conv229, double 6.700000e-01, double 4.000000e-01)
  %sub235 = fsub double %conv232, %39
  %conv236 = fptrunc double %sub235 to float
  %conv237 = fpext float %conv236 to double
  %conv238 = fpext float %conv231 to double
  %40 = tail call double @llvm.fmuladd.f64(double %conv237, double -1.400000e-01, double %conv238)
  %div241 = fdiv double 1.000000e+00, %40
  %mul242 = fmul double %div241, %conv237
  %conv243 = fptrunc double %mul242 to float
  %mul245 = fmul float %conv243, %conv243
  %conv246 = fpext float %mul245 to double
  %add247 = fadd double %conv246, 1.000000e+00
  %div248 = fdiv double 1.000000e+00, %add247
  %mul249 = fmul double %div248, %conv229
  %conv250 = fptrunc double %mul249 to float
  %call251 = tail call float @_Z5exp10f(float %conv250) #3
  %mul252 = fmul float %call251, %conv212
  %mul256 = fmul float %36, %mul252
  store float %mul256, float* %arrayidx203, align 4, !tbaa !7
  %arrayidx262 = getelementptr inbounds float, float* %d, i64 %add202
  %41 = load float, float* %arrayidx262, align 4, !tbaa !7
  %mul263 = fmul float %mul252, %41
  store float %mul263, float* %arrayidx262, align 4, !tbaa !7
  %arrayidx269 = getelementptr inbounds float, float* %e, i64 %add.2
  %42 = load float, float* %arrayidx269, align 4, !tbaa !7
  %add271 = add i64 %call, 304
  %arrayidx272 = getelementptr inbounds float, float* %c, i64 %add271
  %43 = load float, float* %arrayidx272, align 4, !tbaa !7
  %div273 = fdiv float 1.000000e+00, %43, !fpmath !11
  %mul274 = fmul float %div273, %conv46
  %mul275 = fmul float %42, %mul274
  %conv276 = fpext float %mul275 to double
  %add278 = fadd double %conv276, 1.000000e+00
  %div279 = fdiv double 1.000000e+00, %add278
  %mul280 = fmul double %div279, %conv276
  %conv281 = fptrunc double %mul280 to float
  %call282 = tail call float @_Z4fmaxff(float %mul275, float 0x3810000000000000) #3
  %call283 = tail call float @_Z5log10f(float %call282) #3
  %mul285 = fmul float %mul, 0xBF71485F00000000
  %call286 = tail call float @_Z3expf(float %mul285) #3
  %mul289 = fmul float %mul, 0xBF43D5D9A0000000
  %call290 = tail call float @_Z3expf(float %mul289) #3
  %mul291 = fmul float %call290, 0x3FE26C2260000000
  %44 = tail call float @llvm.fmuladd.f32(float %call286, float 0x3FDB27BB20000000, float %mul291)
  %mul293 = fmul float %div154, -5.069000e+03
  %call294 = tail call float @_Z3expf(float %mul293) #3
  %add295 = fadd float %call294, %44
  %call296 = tail call float @_Z4fmaxff(float %add295, float 0x3810000000000000) #3
  %call297 = tail call float @_Z5log10f(float %call296) #3
  %conv298 = fpext float %call297 to double
  %45 = tail call double @llvm.fmuladd.f64(double %conv298, double -1.270000e+00, double 7.500000e-01)
  %conv300 = fptrunc double %45 to float
  %conv301 = fpext float %call283 to double
  %46 = tail call double @llvm.fmuladd.f64(double %conv298, double 6.700000e-01, double 4.000000e-01)
  %sub304 = fsub double %conv301, %46
  %conv305 = fptrunc double %sub304 to float
  %conv306 = fpext float %conv305 to double
  %conv307 = fpext float %conv300 to double
  %47 = tail call double @llvm.fmuladd.f64(double %conv306, double -1.400000e-01, double %conv307)
  %div310 = fdiv double 1.000000e+00, %47
  %mul311 = fmul double %div310, %conv306
  %conv312 = fptrunc double %mul311 to float
  %mul314 = fmul float %conv312, %conv312
  %conv315 = fpext float %mul314 to double
  %add316 = fadd double %conv315, 1.000000e+00
  %div317 = fdiv double 1.000000e+00, %add316
  %mul318 = fmul double %div317, %conv298
  %conv319 = fptrunc double %mul318 to float
  %call320 = tail call float @_Z5exp10f(float %conv319) #3
  %mul321 = fmul float %call320, %conv281
  %mul325 = fmul float %43, %mul321
  store float %mul325, float* %arrayidx272, align 4, !tbaa !7
  %arrayidx331 = getelementptr inbounds float, float* %d, i64 %add271
  %48 = load float, float* %arrayidx331, align 4, !tbaa !7
  %mul332 = fmul float %mul321, %48
  store float %mul332, float* %arrayidx331, align 4, !tbaa !7
  %arrayidx338 = getelementptr inbounds float, float* %e, i64 %add.3
  %49 = load float, float* %arrayidx338, align 4, !tbaa !7
  %add340 = add i64 %call, 320
  %arrayidx341 = getelementptr inbounds float, float* %c, i64 %add340
  %50 = load float, float* %arrayidx341, align 4, !tbaa !7
  %div342 = fdiv float 1.000000e+00, %50, !fpmath !11
  %mul343 = fmul float %div342, %conv46
  %mul344 = fmul float %49, %mul343
  %conv345 = fpext float %mul344 to double
  %add347 = fadd double %conv345, 1.000000e+00
  %div348 = fdiv double 1.000000e+00, %add347
  %mul349 = fmul double %div348, %conv345
  %conv350 = fptrunc double %mul349 to float
  %call351 = tail call float @_Z4fmaxff(float %mul344, float 0x3810000000000000) #3
  %call352 = tail call float @_Z5log10f(float %call351) #3
  %mul354 = fmul float %mul, 0xBF6E3A9180000000
  %call355 = tail call float @_Z3expf(float %mul354) #3
  %mul358 = fmul float %mul, 0xBF37C9BBC0000000
  %call359 = tail call float @_Z3expf(float %mul358) #3
  %mul360 = fmul float %call359, 0x3FE9096BC0000000
  %51 = tail call float @llvm.fmuladd.f32(float %call355, float 0x3FCBDA5120000000, float %mul360)
  %mul362 = fmul float %div154, -6.570000e+03
  %call363 = tail call float @_Z3expf(float %mul362) #3
  %add364 = fadd float %call363, %51
  %call365 = tail call float @_Z4fmaxff(float %add364, float 0x3810000000000000) #3
  %call366 = tail call float @_Z5log10f(float %call365) #3
  %conv367 = fpext float %call366 to double
  %52 = tail call double @llvm.fmuladd.f64(double %conv367, double -1.270000e+00, double 7.500000e-01)
  %conv369 = fptrunc double %52 to float
  %conv370 = fpext float %call352 to double
  %53 = tail call double @llvm.fmuladd.f64(double %conv367, double 6.700000e-01, double 4.000000e-01)
  %sub373 = fsub double %conv370, %53
  %conv374 = fptrunc double %sub373 to float
  %conv375 = fpext float %conv374 to double
  %conv376 = fpext float %conv369 to double
  %54 = tail call double @llvm.fmuladd.f64(double %conv375, double -1.400000e-01, double %conv376)
  %div379 = fdiv double 1.000000e+00, %54
  %mul380 = fmul double %div379, %conv375
  %conv381 = fptrunc double %mul380 to float
  %mul383 = fmul float %conv381, %conv381
  %conv384 = fpext float %mul383 to double
  %add385 = fadd double %conv384, 1.000000e+00
  %div386 = fdiv double 1.000000e+00, %add385
  %mul387 = fmul double %div386, %conv367
  %conv388 = fptrunc double %mul387 to float
  %call389 = tail call float @_Z5exp10f(float %conv388) #3
  %mul390 = fmul float %call389, %conv350
  %mul394 = fmul float %50, %mul390
  store float %mul394, float* %arrayidx341, align 4, !tbaa !7
  %arrayidx400 = getelementptr inbounds float, float* %d, i64 %add340
  %55 = load float, float* %arrayidx400, align 4, !tbaa !7
  %mul401 = fmul float %mul390, %55
  store float %mul401, float* %arrayidx400, align 4, !tbaa !7
  %arrayidx407 = getelementptr inbounds float, float* %e, i64 %add.4
  %56 = load float, float* %arrayidx407, align 4, !tbaa !7
  %add409 = add i64 %call, 376
  %arrayidx410 = getelementptr inbounds float, float* %c, i64 %add409
  %57 = load float, float* %arrayidx410, align 4, !tbaa !7
  %div411 = fdiv float 1.000000e+00, %57, !fpmath !11
  %mul412 = fmul float %div411, %conv46
  %mul413 = fmul float %56, %mul412
  %conv414 = fpext float %mul413 to double
  %add416 = fadd double %conv414, 1.000000e+00
  %div417 = fdiv double 1.000000e+00, %add416
  %mul418 = fmul double %div417, %conv414
  %conv419 = fptrunc double %mul418 to float
  %call420 = tail call float @_Z4fmaxff(float %mul413, float 0x3810000000000000) #3
  %call421 = tail call float @_Z5log10f(float %call420) #3
  %mul423 = fmul float %mul, 0xBF8A41A420000000
  %call424 = tail call float @_Z3expf(float %mul423) #3
  %mul427 = fmul float %mul, 0xBF406CD0E0000000
  %call428 = tail call float @_Z3expf(float %mul427) #3
  %mul429 = fmul float %call428, 0x3FE5C28F60000000
  %58 = tail call float @llvm.fmuladd.f32(float %call424, float 0x3FD47AE140000000, float %mul429)
  %mul431 = fmul float %div154, -5.590000e+03
  %call432 = tail call float @_Z3expf(float %mul431) #3
  %add433 = fadd float %call432, %58
  %call434 = tail call float @_Z4fmaxff(float %add433, float 0x3810000000000000) #3
  %call435 = tail call float @_Z5log10f(float %call434) #3
  %conv436 = fpext float %call435 to double
  %59 = tail call double @llvm.fmuladd.f64(double %conv436, double -1.270000e+00, double 7.500000e-01)
  %conv438 = fptrunc double %59 to float
  %conv439 = fpext float %call421 to double
  %60 = tail call double @llvm.fmuladd.f64(double %conv436, double 6.700000e-01, double 4.000000e-01)
  %sub442 = fsub double %conv439, %60
  %conv443 = fptrunc double %sub442 to float
  %conv444 = fpext float %conv443 to double
  %conv445 = fpext float %conv438 to double
  %61 = tail call double @llvm.fmuladd.f64(double %conv444, double -1.400000e-01, double %conv445)
  %div448 = fdiv double 1.000000e+00, %61
  %mul449 = fmul double %div448, %conv444
  %conv450 = fptrunc double %mul449 to float
  %mul452 = fmul float %conv450, %conv450
  %conv453 = fpext float %mul452 to double
  %add454 = fadd double %conv453, 1.000000e+00
  %div455 = fdiv double 1.000000e+00, %add454
  %mul456 = fmul double %div455, %conv436
  %conv457 = fptrunc double %mul456 to float
  %call458 = tail call float @_Z5exp10f(float %conv457) #3
  %mul459 = fmul float %call458, %conv419
  %mul463 = fmul float %57, %mul459
  store float %mul463, float* %arrayidx410, align 4, !tbaa !7
  %arrayidx469 = getelementptr inbounds float, float* %d, i64 %add409
  %62 = load float, float* %arrayidx469, align 4, !tbaa !7
  %mul470 = fmul float %mul459, %62
  store float %mul470, float* %arrayidx469, align 4, !tbaa !7
  %arrayidx476 = getelementptr inbounds float, float* %e, i64 %add.5
  %63 = load float, float* %arrayidx476, align 4, !tbaa !7
  %add478 = add i64 %call, 440
  %arrayidx479 = getelementptr inbounds float, float* %c, i64 %add478
  %64 = load float, float* %arrayidx479, align 4, !tbaa !7
  %div480 = fdiv float 1.000000e+00, %64, !fpmath !11
  %mul481 = fmul float %div480, %conv46
  %mul482 = fmul float %63, %mul481
  %conv483 = fpext float %mul482 to double
  %add485 = fadd double %conv483, 1.000000e+00
  %div486 = fdiv double 1.000000e+00, %add485
  %mul487 = fmul double %div486, %conv483
  %conv488 = fptrunc double %mul487 to float
  %call489 = tail call float @_Z4fmaxff(float %mul482, float 0x3810000000000000) #3
  %call490 = tail call float @_Z5log10f(float %call489) #3
  %mul492 = fmul float %mul, 0xBF6DCA01E0000000
  %call493 = tail call float @_Z3expf(float %mul492) #3
  %mul496 = fmul float %mul, 0xBF4ABA4200000000
  %call497 = tail call float @_Z3expf(float %mul496) #3
  %mul498 = fmul float %call497, 0x3FE2E703A0000000
  %65 = tail call float @llvm.fmuladd.f32(float %call493, float 0x3FDA31F8A0000000, float %mul498)
  %mul500 = fmul float %div154, -5.185000e+03
  %call501 = tail call float @_Z3expf(float %mul500) #3
  %add502 = fadd float %call501, %65
  %call503 = tail call float @_Z4fmaxff(float %add502, float 0x3810000000000000) #3
  %call504 = tail call float @_Z5log10f(float %call503) #3
  %conv505 = fpext float %call504 to double
  %66 = tail call double @llvm.fmuladd.f64(double %conv505, double -1.270000e+00, double 7.500000e-01)
  %conv507 = fptrunc double %66 to float
  %conv508 = fpext float %call490 to double
  %67 = tail call double @llvm.fmuladd.f64(double %conv505, double 6.700000e-01, double 4.000000e-01)
  %sub511 = fsub double %conv508, %67
  %conv512 = fptrunc double %sub511 to float
  %conv513 = fpext float %conv512 to double
  %conv514 = fpext float %conv507 to double
  %68 = tail call double @llvm.fmuladd.f64(double %conv513, double -1.400000e-01, double %conv514)
  %div517 = fdiv double 1.000000e+00, %68
  %mul518 = fmul double %div517, %conv513
  %conv519 = fptrunc double %mul518 to float
  %mul521 = fmul float %conv519, %conv519
  %conv522 = fpext float %mul521 to double
  %add523 = fadd double %conv522, 1.000000e+00
  %div524 = fdiv double 1.000000e+00, %add523
  %mul525 = fmul double %div524, %conv505
  %conv526 = fptrunc double %mul525 to float
  %call527 = tail call float @_Z5exp10f(float %conv526) #3
  %mul528 = fmul float %call527, %conv488
  %mul532 = fmul float %64, %mul528
  store float %mul532, float* %arrayidx479, align 4, !tbaa !7
  %arrayidx538 = getelementptr inbounds float, float* %d, i64 %add478
  %69 = load float, float* %arrayidx538, align 4, !tbaa !7
  %mul539 = fmul float %mul528, %69
  store float %mul539, float* %arrayidx538, align 4, !tbaa !7
  %arrayidx545 = getelementptr inbounds float, float* %e, i64 %add.6
  %70 = load float, float* %arrayidx545, align 4, !tbaa !7
  %add547 = add i64 %call, 560
  %arrayidx548 = getelementptr inbounds float, float* %c, i64 %add547
  %71 = load float, float* %arrayidx548, align 4, !tbaa !7
  %div549 = fdiv float 1.000000e+00, %71, !fpmath !11
  %mul550 = fmul float %div549, %conv46
  %mul551 = fmul float %70, %mul550
  %conv552 = fpext float %mul551 to double
  %add554 = fadd double %conv552, 1.000000e+00
  %div555 = fdiv double 1.000000e+00, %add554
  %mul556 = fmul double %div555, %conv552
  %conv557 = fptrunc double %mul556 to float
  %call558 = tail call float @_Z4fmaxff(float %mul551, float 0x3810000000000000) #3
  %call559 = tail call float @_Z5log10f(float %call558) #3
  %mul565 = fmul float %mul, 0xBF45129A60000000
  %call566 = tail call float @_Z3expf(float %mul565) #3
  %mul567 = fmul float %call566, 0x3FE8418940000000
  %72 = tail call float @llvm.fmuladd.f32(float %call148, float 0x3FCEF9DB20000000, float %mul567)
  %mul569 = fmul float %div154, -4.200000e+03
  %call570 = tail call float @_Z3expf(float %mul569) #3
  %add571 = fadd float %call570, %72
  %call572 = tail call float @_Z4fmaxff(float %add571, float 0x3810000000000000) #3
  %call573 = tail call float @_Z5log10f(float %call572) #3
  %conv574 = fpext float %call573 to double
  %73 = tail call double @llvm.fmuladd.f64(double %conv574, double -1.270000e+00, double 7.500000e-01)
  %conv576 = fptrunc double %73 to float
  %conv577 = fpext float %call559 to double
  %74 = tail call double @llvm.fmuladd.f64(double %conv574, double 6.700000e-01, double 4.000000e-01)
  %sub580 = fsub double %conv577, %74
  %conv581 = fptrunc double %sub580 to float
  %conv582 = fpext float %conv581 to double
  %conv583 = fpext float %conv576 to double
  %75 = tail call double @llvm.fmuladd.f64(double %conv582, double -1.400000e-01, double %conv583)
  %div586 = fdiv double 1.000000e+00, %75
  %mul587 = fmul double %div586, %conv582
  %conv588 = fptrunc double %mul587 to float
  %mul590 = fmul float %conv588, %conv588
  %conv591 = fpext float %mul590 to double
  %add592 = fadd double %conv591, 1.000000e+00
  %div593 = fdiv double 1.000000e+00, %add592
  %mul594 = fmul double %div593, %conv574
  %conv595 = fptrunc double %mul594 to float
  %call596 = tail call float @_Z5exp10f(float %conv595) #3
  %mul597 = fmul float %call596, %conv557
  %mul601 = fmul float %71, %mul597
  store float %mul601, float* %arrayidx548, align 4, !tbaa !7
  %arrayidx607 = getelementptr inbounds float, float* %d, i64 %add547
  %76 = load float, float* %arrayidx607, align 4, !tbaa !7
  %mul608 = fmul float %76, %mul597
  store float %mul608, float* %arrayidx607, align 4, !tbaa !7
  %arrayidx614 = getelementptr inbounds float, float* %e, i64 %add.7
  %77 = load float, float* %arrayidx614, align 4, !tbaa !7
  %add616 = add i64 %call, 616
  %arrayidx617 = getelementptr inbounds float, float* %c, i64 %add616
  %78 = load float, float* %arrayidx617, align 4, !tbaa !7
  %div618 = fdiv float 1.000000e+00, %78, !fpmath !11
  %mul619 = fmul float %div618, %conv46
  %mul620 = fmul float %77, %mul619
  %conv621 = fpext float %mul620 to double
  %add623 = fadd double %conv621, 1.000000e+00
  %div624 = fdiv double 1.000000e+00, %add623
  %mul625 = fmul double %div624, %conv621
  %conv626 = fptrunc double %mul625 to float
  %call627 = tail call float @_Z4fmaxff(float %mul620, float 0x3810000000000000) #3
  %call628 = tail call float @_Z5log10f(float %call627) #3
  %mul630 = fmul float %mul, 0xBF8BACF920000000
  %call631 = tail call float @_Z3expf(float %mul630) #3
  %mul634 = fmul float %mul, 0xBF36489880000000
  %call635 = tail call float @_Z3expf(float %mul634) #3
  %mul636 = fmul float %call635, 0x3FE90E5600000000
  %79 = tail call float @llvm.fmuladd.f32(float %call631, float 0x3FCBC6A7E0000000, float %mul636)
  %mul638 = fmul float %div154, -6.964000e+03
  %call639 = tail call float @_Z3expf(float %mul638) #3
  %add640 = fadd float %call639, %79
  %call641 = tail call float @_Z4fmaxff(float %add640, float 0x3810000000000000) #3
  %call642 = tail call float @_Z5log10f(float %call641) #3
  %conv643 = fpext float %call642 to double
  %80 = tail call double @llvm.fmuladd.f64(double %conv643, double -1.270000e+00, double 7.500000e-01)
  %conv645 = fptrunc double %80 to float
  %conv646 = fpext float %call628 to double
  %81 = tail call double @llvm.fmuladd.f64(double %conv643, double 6.700000e-01, double 4.000000e-01)
  %sub649 = fsub double %conv646, %81
  %conv650 = fptrunc double %sub649 to float
  %conv651 = fpext float %conv650 to double
  %conv652 = fpext float %conv645 to double
  %82 = tail call double @llvm.fmuladd.f64(double %conv651, double -1.400000e-01, double %conv652)
  %div655 = fdiv double 1.000000e+00, %82
  %mul656 = fmul double %div655, %conv651
  %conv657 = fptrunc double %mul656 to float
  %mul659 = fmul float %conv657, %conv657
  %conv660 = fpext float %mul659 to double
  %add661 = fadd double %conv660, 1.000000e+00
  %div662 = fdiv double 1.000000e+00, %add661
  %mul663 = fmul double %div662, %conv643
  %conv664 = fptrunc double %mul663 to float
  %call665 = tail call float @_Z5exp10f(float %conv664) #3
  %mul666 = fmul float %call665, %conv626
  %mul670 = fmul float %78, %mul666
  store float %mul670, float* %arrayidx617, align 4, !tbaa !7
  %arrayidx676 = getelementptr inbounds float, float* %d, i64 %add616
  %83 = load float, float* %arrayidx676, align 4, !tbaa !7
  %mul677 = fmul float %mul666, %83
  store float %mul677, float* %arrayidx676, align 4, !tbaa !7
  %arrayidx683 = getelementptr inbounds float, float* %e, i64 %add.8
  %84 = load float, float* %arrayidx683, align 4, !tbaa !7
  %add685 = add i64 %call, 704
  %arrayidx686 = getelementptr inbounds float, float* %c, i64 %add685
  %85 = load float, float* %arrayidx686, align 4, !tbaa !7
  %div687 = fdiv float 1.000000e+00, %85, !fpmath !11
  %mul688 = fmul float %div687, %conv46
  %mul689 = fmul float %84, %mul688
  %conv690 = fpext float %mul689 to double
  %add692 = fadd double %conv690, 1.000000e+00
  %div693 = fdiv double 1.000000e+00, %add692
  %mul694 = fmul double %div693, %conv690
  %conv695 = fptrunc double %mul694 to float
  %call696 = tail call float @_Z4fmaxff(float %mul689, float 0x3810000000000000) #3
  %call697 = tail call float @_Z5log10f(float %call696) #3
  %mul699 = fmul float %mul, 0xBFB393EE20000000
  %call700 = tail call float @_Z3expf(float %mul699) #3
  %mul703 = fmul float %mul, 0xBF3F89BB80000000
  %call704 = tail call float @_Z3expf(float %mul703) #3
  %mul705 = fmul float %call704, 0x3FE3C0EBE0000000
  %86 = tail call float @llvm.fmuladd.f32(float %call700, float 0x3FD87E2820000000, float %mul705)
  %mul707 = fmul float %div154, -5.093000e+03
  %call708 = tail call float @_Z3expf(float %mul707) #3
  %add709 = fadd float %call708, %86
  %call710 = tail call float @_Z4fmaxff(float %add709, float 0x3810000000000000) #3
  %call711 = tail call float @_Z5log10f(float %call710) #3
  %conv712 = fpext float %call711 to double
  %87 = tail call double @llvm.fmuladd.f64(double %conv712, double -1.270000e+00, double 7.500000e-01)
  %conv714 = fptrunc double %87 to float
  %conv715 = fpext float %call697 to double
  %88 = tail call double @llvm.fmuladd.f64(double %conv712, double 6.700000e-01, double 4.000000e-01)
  %sub718 = fsub double %conv715, %88
  %conv719 = fptrunc double %sub718 to float
  %conv720 = fpext float %conv719 to double
  %conv721 = fpext float %conv714 to double
  %89 = tail call double @llvm.fmuladd.f64(double %conv720, double -1.400000e-01, double %conv721)
  %div724 = fdiv double 1.000000e+00, %89
  %mul725 = fmul double %div724, %conv720
  %conv726 = fptrunc double %mul725 to float
  %mul728 = fmul float %conv726, %conv726
  %conv729 = fpext float %mul728 to double
  %add730 = fadd double %conv729, 1.000000e+00
  %div731 = fdiv double 1.000000e+00, %add730
  %mul732 = fmul double %div731, %conv712
  %conv733 = fptrunc double %mul732 to float
  %call734 = tail call float @_Z5exp10f(float %conv733) #3
  %mul735 = fmul float %call734, %conv695
  %mul739 = fmul float %85, %mul735
  store float %mul739, float* %arrayidx686, align 4, !tbaa !7
  %arrayidx745 = getelementptr inbounds float, float* %d, i64 %add685
  %90 = load float, float* %arrayidx745, align 4, !tbaa !7
  %mul746 = fmul float %mul735, %90
  store float %mul746, float* %arrayidx745, align 4, !tbaa !7
  %arrayidx752 = getelementptr inbounds float, float* %e, i64 %add.9
  %91 = load float, float* %arrayidx752, align 4, !tbaa !7
  %add754 = add i64 %call, 736
  %arrayidx755 = getelementptr inbounds float, float* %c, i64 %add754
  %92 = load float, float* %arrayidx755, align 4, !tbaa !7
  %div756 = fdiv float 1.000000e+00, %92, !fpmath !11
  %mul757 = fmul float %div756, %conv46
  %mul758 = fmul float %91, %mul757
  %conv759 = fpext float %mul758 to double
  %add761 = fadd double %conv759, 1.000000e+00
  %div762 = fdiv double 1.000000e+00, %add761
  %mul763 = fmul double %div762, %conv759
  %conv764 = fptrunc double %mul763 to float
  %call765 = tail call float @_Z4fmaxff(float %mul758, float 0x3810000000000000) #3
  %call766 = tail call float @_Z5log10f(float %call765) #3
  %mul768 = fmul float %mul, 0xBF7B203640000000
  %call769 = tail call float @_Z3expf(float %mul768) #3
  %mul772 = fmul float %mul, 0xBF4F9182C0000000
  %call773 = tail call float @_Z3expf(float %mul772) #3
  %mul774 = fmul float %call773, 0x3FE10A3D80000000
  %93 = tail call float @llvm.fmuladd.f32(float %call769, float 0x3FDDEB8520000000, float %mul774)
  %mul776 = fmul float %div154, -4.970000e+03
  %call777 = tail call float @_Z3expf(float %mul776) #3
  %add778 = fadd float %call777, %93
  %call779 = tail call float @_Z4fmaxff(float %add778, float 0x3810000000000000) #3
  %call780 = tail call float @_Z5log10f(float %call779) #3
  %conv781 = fpext float %call780 to double
  %94 = tail call double @llvm.fmuladd.f64(double %conv781, double -1.270000e+00, double 7.500000e-01)
  %conv783 = fptrunc double %94 to float
  %conv784 = fpext float %call766 to double
  %95 = tail call double @llvm.fmuladd.f64(double %conv781, double 6.700000e-01, double 4.000000e-01)
  %sub787 = fsub double %conv784, %95
  %conv788 = fptrunc double %sub787 to float
  %conv789 = fpext float %conv788 to double
  %conv790 = fpext float %conv783 to double
  %96 = tail call double @llvm.fmuladd.f64(double %conv789, double -1.400000e-01, double %conv790)
  %div793 = fdiv double 1.000000e+00, %96
  %mul794 = fmul double %div793, %conv789
  %conv795 = fptrunc double %mul794 to float
  %mul797 = fmul float %conv795, %conv795
  %conv798 = fpext float %mul797 to double
  %add799 = fadd double %conv798, 1.000000e+00
  %div800 = fdiv double 1.000000e+00, %add799
  %mul801 = fmul double %div800, %conv781
  %conv802 = fptrunc double %mul801 to float
  %call803 = tail call float @_Z5exp10f(float %conv802) #3
  %mul804 = fmul float %call803, %conv764
  %mul808 = fmul float %92, %mul804
  store float %mul808, float* %arrayidx755, align 4, !tbaa !7
  %arrayidx814 = getelementptr inbounds float, float* %d, i64 %add754
  %97 = load float, float* %arrayidx814, align 4, !tbaa !7
  %mul815 = fmul float %mul804, %97
  store float %mul815, float* %arrayidx814, align 4, !tbaa !7
  %arrayidx821 = getelementptr inbounds float, float* %e, i64 %add.10
  %98 = load float, float* %arrayidx821, align 4, !tbaa !7
  %add823 = add i64 %call, 904
  %arrayidx824 = getelementptr inbounds float, float* %c, i64 %add823
  %99 = load float, float* %arrayidx824, align 4, !tbaa !7
  %div825 = fdiv float 1.000000e+00, %99, !fpmath !11
  %mul826 = fmul float %div825, %conv89
  %mul827 = fmul float %98, %mul826
  %conv828 = fpext float %mul827 to double
  %add830 = fadd double %conv828, 1.000000e+00
  %div831 = fdiv double 1.000000e+00, %add830
  %mul832 = fmul double %div831, %conv828
  %conv833 = fptrunc double %mul832 to float
  %mul837 = fmul float %99, %conv833
  store float %mul837, float* %arrayidx824, align 4, !tbaa !7
  %arrayidx843 = getelementptr inbounds float, float* %d, i64 %add823
  %100 = load float, float* %arrayidx843, align 4, !tbaa !7
  %mul844 = fmul float %100, %conv833
  store float %mul844, float* %arrayidx843, align 4, !tbaa !7
  %arrayidx850 = getelementptr inbounds float, float* %e, i64 %add.11
  %101 = load float, float* %arrayidx850, align 4, !tbaa !7
  %add852 = add i64 %call, 912
  %arrayidx853 = getelementptr inbounds float, float* %c, i64 %add852
  %102 = load float, float* %arrayidx853, align 4, !tbaa !7
  %div854 = fdiv float 1.000000e+00, %102, !fpmath !11
  %mul855 = fmul float %div854, %conv46
  %mul856 = fmul float %101, %mul855
  %conv857 = fpext float %mul856 to double
  %add859 = fadd double %conv857, 1.000000e+00
  %div860 = fdiv double 1.000000e+00, %add859
  %mul861 = fmul double %div860, %conv857
  %conv862 = fptrunc double %mul861 to float
  %call863 = tail call float @_Z4fmaxff(float %mul856, float 0x3810000000000000) #3
  %call864 = tail call float @_Z5log10f(float %call863) #3
  %mul866 = fmul float %mul, 0xBF285898C0000000
  %call867 = tail call float @_Z3expf(float %mul866) #3
  %mul870 = fmul float %mul, 0xBFCDD08900000000
  %call871 = tail call float @_Z3expf(float %mul870) #3
  %mul872 = fmul float %call871, 0x3FFFB4A240000000
  %103 = tail call float @llvm.fmuladd.f32(float %call867, float 0xBFEF694460000000, float %mul872)
  %mul874 = fmul float %div154, 0x3FB45A1CA0000000
  %call875 = tail call float @_Z3expf(float %mul874) #3
  %add876 = fadd float %call875, %103
  %call877 = tail call float @_Z4fmaxff(float %add876, float 0x3810000000000000) #3
  %call878 = tail call float @_Z5log10f(float %call877) #3
  %conv879 = fpext float %call878 to double
  %104 = tail call double @llvm.fmuladd.f64(double %conv879, double -1.270000e+00, double 7.500000e-01)
  %conv881 = fptrunc double %104 to float
  %conv882 = fpext float %call864 to double
  %105 = tail call double @llvm.fmuladd.f64(double %conv879, double 6.700000e-01, double 4.000000e-01)
  %sub885 = fsub double %conv882, %105
  %conv886 = fptrunc double %sub885 to float
  %conv887 = fpext float %conv886 to double
  %conv888 = fpext float %conv881 to double
  %106 = tail call double @llvm.fmuladd.f64(double %conv887, double -1.400000e-01, double %conv888)
  %div891 = fdiv double 1.000000e+00, %106
  %mul892 = fmul double %div891, %conv887
  %conv893 = fptrunc double %mul892 to float
  %mul895 = fmul float %conv893, %conv893
  %conv896 = fpext float %mul895 to double
  %add897 = fadd double %conv896, 1.000000e+00
  %div898 = fdiv double 1.000000e+00, %add897
  %mul899 = fmul double %div898, %conv879
  %conv900 = fptrunc double %mul899 to float
  %call901 = tail call float @_Z5exp10f(float %conv900) #3
  %mul902 = fmul float %call901, %conv862
  %mul906 = fmul float %102, %mul902
  store float %mul906, float* %arrayidx853, align 4, !tbaa !7
  %arrayidx912 = getelementptr inbounds float, float* %d, i64 %add852
  %107 = load float, float* %arrayidx912, align 4, !tbaa !7
  %mul913 = fmul float %mul902, %107
  store float %mul913, float* %arrayidx912, align 4, !tbaa !7
  ret void
}

; Function Attrs: convergent nounwind readnone
declare dso_local i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #2

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z5log10f(float) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z4fmaxff(float, float) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z3expf(float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: convergent nounwind readnone
declare dso_local float @_Z5exp10f(float) local_unnamed_addr #1

attributes #0 = { convergent nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "uniform-work-group-size"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { convergent nounwind readnone }

!llvm.module.flags = !{!0}
!opencl.ocl.version = !{!1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 2, i32 0}
!2 = !{!"clang version 10.0.0 "}
!3 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 0}
!4 = !{!"none", !"none", !"none", !"none", !"none", !"none"}
!5 = !{!"float*", !"float*", !"float*", !"float*", !"float*", !"float"}
!6 = !{!"const", !"const", !"", !"", !"const", !""}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{float 2.500000e+00}
